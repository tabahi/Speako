{"version":3,"file":"workbox-36669cb1.js","sources":["node_modules/workbox-core/_version.js","node_modules/workbox-core/_private/logger.js","node_modules/workbox-core/models/messages/messages.js","node_modules/workbox-core/models/messages/messageGenerator.js","node_modules/workbox-core/_private/WorkboxError.js","node_modules/workbox-core/_private/assert.js","node_modules/workbox-routing/_version.js","node_modules/workbox-routing/utils/constants.js","node_modules/workbox-routing/utils/normalizeHandler.js","node_modules/workbox-routing/Route.js","node_modules/workbox-routing/RegExpRoute.js","node_modules/workbox-core/_private/getFriendlyURL.js","node_modules/workbox-routing/Router.js","node_modules/workbox-routing/utils/getOrCreateDefaultRouter.js","node_modules/workbox-routing/registerRoute.js","node_modules/workbox-core/_private/cacheNames.js","node_modules/workbox-core/_private/dontWaitFor.js","node_modules/workbox-core/models/quotaErrorCallbacks.js","node_modules/workbox-core/registerQuotaErrorCallback.js","node_modules/idb/build/esm/wrap-idb-value.js","node_modules/idb/build/esm/index.js","node_modules/workbox-expiration/_version.js","node_modules/workbox-expiration/models/CacheTimestampsModel.js","node_modules/workbox-expiration/CacheExpiration.js","node_modules/workbox-expiration/ExpirationPlugin.js","node_modules/workbox-core/_private/cacheMatchIgnoreParams.js","node_modules/workbox-core/_private/Deferred.js","node_modules/workbox-core/_private/executeQuotaErrorCallbacks.js","node_modules/workbox-core/_private/timeout.js","node_modules/workbox-strategies/_version.js","node_modules/workbox-strategies/StrategyHandler.js","node_modules/workbox-strategies/Strategy.js","node_modules/workbox-strategies/utils/messages.js","node_modules/workbox-strategies/CacheFirst.js"],"sourcesContent":["\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:core:6.2.4'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst logger = (process.env.NODE_ENV === 'production' ? null : (() => {\n    // Don't overwrite this value if it's already set.\n    // See https://github.com/GoogleChrome/workbox/pull/2284#issuecomment-560470923\n    if (!('__WB_DISABLE_DEV_LOGS' in self)) {\n        self.__WB_DISABLE_DEV_LOGS = false;\n    }\n    let inGroup = false;\n    const methodToColorMap = {\n        debug: `#7f8c8d`,\n        log: `#2ecc71`,\n        warn: `#f39c12`,\n        error: `#c0392b`,\n        groupCollapsed: `#3498db`,\n        groupEnd: null,\n    };\n    const print = function (method, args) {\n        if (self.__WB_DISABLE_DEV_LOGS) {\n            return;\n        }\n        if (method === 'groupCollapsed') {\n            // Safari doesn't print all console.groupCollapsed() arguments:\n            // https://bugs.webkit.org/show_bug.cgi?id=182754\n            if (/^((?!chrome|android).)*safari/i.test(navigator.userAgent)) {\n                console[method](...args);\n                return;\n            }\n        }\n        const styles = [\n            `background: ${methodToColorMap[method]}`,\n            `border-radius: 0.5em`,\n            `color: white`,\n            `font-weight: bold`,\n            `padding: 2px 0.5em`,\n        ];\n        // When in a group, the workbox prefix is not displayed.\n        const logPrefix = inGroup ? [] : ['%cworkbox', styles.join(';')];\n        console[method](...logPrefix, ...args);\n        if (method === 'groupCollapsed') {\n            inGroup = true;\n        }\n        if (method === 'groupEnd') {\n            inGroup = false;\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    const api = {};\n    const loggerMethods = Object.keys(methodToColorMap);\n    for (const key of loggerMethods) {\n        const method = key;\n        api[method] = (...args) => {\n            print(method, args);\n        };\n    }\n    return api;\n})());\nexport { logger };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../../_version.js';\nexport const messages = {\n    'invalid-value': ({ paramName, validValueDescription, value }) => {\n        if (!paramName || !validValueDescription) {\n            throw new Error(`Unexpected input to 'invalid-value' error.`);\n        }\n        return `The '${paramName}' parameter was given a value with an ` +\n            `unexpected value. ${validValueDescription} Received a value of ` +\n            `${JSON.stringify(value)}.`;\n    },\n    'not-an-array': ({ moduleName, className, funcName, paramName }) => {\n        if (!moduleName || !className || !funcName || !paramName) {\n            throw new Error(`Unexpected input to 'not-an-array' error.`);\n        }\n        return `The parameter '${paramName}' passed into ` +\n            `'${moduleName}.${className}.${funcName}()' must be an array.`;\n    },\n    'incorrect-type': ({ expectedType, paramName, moduleName, className, funcName }) => {\n        if (!expectedType || !paramName || !moduleName || !funcName) {\n            throw new Error(`Unexpected input to 'incorrect-type' error.`);\n        }\n        const classNameStr = className ? `${className}.` : '';\n        return `The parameter '${paramName}' passed into ` +\n            `'${moduleName}.${classNameStr}` +\n            `${funcName}()' must be of type ${expectedType}.`;\n    },\n    'incorrect-class': ({ expectedClassName, paramName, moduleName, className, funcName, isReturnValueProblem }) => {\n        if (!expectedClassName || !moduleName || !funcName) {\n            throw new Error(`Unexpected input to 'incorrect-class' error.`);\n        }\n        const classNameStr = className ? `${className}.` : '';\n        if (isReturnValueProblem) {\n            return `The return value from ` +\n                `'${moduleName}.${classNameStr}${funcName}()' ` +\n                `must be an instance of class ${expectedClassName}.`;\n        }\n        return `The parameter '${paramName}' passed into ` +\n            `'${moduleName}.${classNameStr}${funcName}()' ` +\n            `must be an instance of class ${expectedClassName}.`;\n    },\n    'missing-a-method': ({ expectedMethod, paramName, moduleName, className, funcName }) => {\n        if (!expectedMethod || !paramName || !moduleName || !className\n            || !funcName) {\n            throw new Error(`Unexpected input to 'missing-a-method' error.`);\n        }\n        return `${moduleName}.${className}.${funcName}() expected the ` +\n            `'${paramName}' parameter to expose a '${expectedMethod}' method.`;\n    },\n    'add-to-cache-list-unexpected-type': ({ entry }) => {\n        return `An unexpected entry was passed to ` +\n            `'workbox-precaching.PrecacheController.addToCacheList()' The entry ` +\n            `'${JSON.stringify(entry)}' isn't supported. You must supply an array of ` +\n            `strings with one or more characters, objects with a url property or ` +\n            `Request objects.`;\n    },\n    'add-to-cache-list-conflicting-entries': ({ firstEntry, secondEntry }) => {\n        if (!firstEntry || !secondEntry) {\n            throw new Error(`Unexpected input to ` +\n                `'add-to-cache-list-duplicate-entries' error.`);\n        }\n        return `Two of the entries passed to ` +\n            `'workbox-precaching.PrecacheController.addToCacheList()' had the URL ` +\n            `${firstEntry} but different revision details. Workbox is ` +\n            `unable to cache and version the asset correctly. Please remove one ` +\n            `of the entries.`;\n    },\n    'plugin-error-request-will-fetch': ({ thrownErrorMessage }) => {\n        if (!thrownErrorMessage) {\n            throw new Error(`Unexpected input to ` +\n                `'plugin-error-request-will-fetch', error.`);\n        }\n        return `An error was thrown by a plugins 'requestWillFetch()' method. ` +\n            `The thrown error message was: '${thrownErrorMessage}'.`;\n    },\n    'invalid-cache-name': ({ cacheNameId, value }) => {\n        if (!cacheNameId) {\n            throw new Error(`Expected a 'cacheNameId' for error 'invalid-cache-name'`);\n        }\n        return `You must provide a name containing at least one character for ` +\n            `setCacheDetails({${cacheNameId}: '...'}). Received a value of ` +\n            `'${JSON.stringify(value)}'`;\n    },\n    'unregister-route-but-not-found-with-method': ({ method }) => {\n        if (!method) {\n            throw new Error(`Unexpected input to ` +\n                `'unregister-route-but-not-found-with-method' error.`);\n        }\n        return `The route you're trying to unregister was not  previously ` +\n            `registered for the method type '${method}'.`;\n    },\n    'unregister-route-route-not-registered': () => {\n        return `The route you're trying to unregister was not previously ` +\n            `registered.`;\n    },\n    'queue-replay-failed': ({ name }) => {\n        return `Replaying the background sync queue '${name}' failed.`;\n    },\n    'duplicate-queue-name': ({ name }) => {\n        return `The Queue name '${name}' is already being used. ` +\n            `All instances of backgroundSync.Queue must be given unique names.`;\n    },\n    'expired-test-without-max-age': ({ methodName, paramName }) => {\n        return `The '${methodName}()' method can only be used when the ` +\n            `'${paramName}' is used in the constructor.`;\n    },\n    'unsupported-route-type': ({ moduleName, className, funcName, paramName }) => {\n        return `The supplied '${paramName}' parameter was an unsupported type. ` +\n            `Please check the docs for ${moduleName}.${className}.${funcName} for ` +\n            `valid input types.`;\n    },\n    'not-array-of-class': ({ value, expectedClass, moduleName, className, funcName, paramName }) => {\n        return `The supplied '${paramName}' parameter must be an array of ` +\n            `'${expectedClass}' objects. Received '${JSON.stringify(value)},'. ` +\n            `Please check the call to ${moduleName}.${className}.${funcName}() ` +\n            `to fix the issue.`;\n    },\n    'max-entries-or-age-required': ({ moduleName, className, funcName }) => {\n        return `You must define either config.maxEntries or config.maxAgeSeconds` +\n            `in ${moduleName}.${className}.${funcName}`;\n    },\n    'statuses-or-headers-required': ({ moduleName, className, funcName }) => {\n        return `You must define either config.statuses or config.headers` +\n            `in ${moduleName}.${className}.${funcName}`;\n    },\n    'invalid-string': ({ moduleName, funcName, paramName }) => {\n        if (!paramName || !moduleName || !funcName) {\n            throw new Error(`Unexpected input to 'invalid-string' error.`);\n        }\n        return `When using strings, the '${paramName}' parameter must start with ` +\n            `'http' (for cross-origin matches) or '/' (for same-origin matches). ` +\n            `Please see the docs for ${moduleName}.${funcName}() for ` +\n            `more info.`;\n    },\n    'channel-name-required': () => {\n        return `You must provide a channelName to construct a ` +\n            `BroadcastCacheUpdate instance.`;\n    },\n    'invalid-responses-are-same-args': () => {\n        return `The arguments passed into responsesAreSame() appear to be ` +\n            `invalid. Please ensure valid Responses are used.`;\n    },\n    'expire-custom-caches-only': () => {\n        return `You must provide a 'cacheName' property when using the ` +\n            `expiration plugin with a runtime caching strategy.`;\n    },\n    'unit-must-be-bytes': ({ normalizedRangeHeader }) => {\n        if (!normalizedRangeHeader) {\n            throw new Error(`Unexpected input to 'unit-must-be-bytes' error.`);\n        }\n        return `The 'unit' portion of the Range header must be set to 'bytes'. ` +\n            `The Range header provided was \"${normalizedRangeHeader}\"`;\n    },\n    'single-range-only': ({ normalizedRangeHeader }) => {\n        if (!normalizedRangeHeader) {\n            throw new Error(`Unexpected input to 'single-range-only' error.`);\n        }\n        return `Multiple ranges are not supported. Please use a  single start ` +\n            `value, and optional end value. The Range header provided was ` +\n            `\"${normalizedRangeHeader}\"`;\n    },\n    'invalid-range-values': ({ normalizedRangeHeader }) => {\n        if (!normalizedRangeHeader) {\n            throw new Error(`Unexpected input to 'invalid-range-values' error.`);\n        }\n        return `The Range header is missing both start and end values. At least ` +\n            `one of those values is needed. The Range header provided was ` +\n            `\"${normalizedRangeHeader}\"`;\n    },\n    'no-range-header': () => {\n        return `No Range header was found in the Request provided.`;\n    },\n    'range-not-satisfiable': ({ size, start, end }) => {\n        return `The start (${start}) and end (${end}) values in the Range are ` +\n            `not satisfiable by the cached response, which is ${size} bytes.`;\n    },\n    'attempt-to-cache-non-get-request': ({ url, method }) => {\n        return `Unable to cache '${url}' because it is a '${method}' request and ` +\n            `only 'GET' requests can be cached.`;\n    },\n    'cache-put-with-no-response': ({ url }) => {\n        return `There was an attempt to cache '${url}' but the response was not ` +\n            `defined.`;\n    },\n    'no-response': ({ url, error }) => {\n        let message = `The strategy could not generate a response for '${url}'.`;\n        if (error) {\n            message += ` The underlying error is ${error}.`;\n        }\n        return message;\n    },\n    'bad-precaching-response': ({ url, status }) => {\n        return `The precaching request for '${url}' failed` +\n            (status ? ` with an HTTP status of ${status}.` : `.`);\n    },\n    'non-precached-url': ({ url }) => {\n        return `createHandlerBoundToURL('${url}') was called, but that URL is ` +\n            `not precached. Please pass in a URL that is precached instead.`;\n    },\n    'add-to-cache-list-conflicting-integrities': ({ url }) => {\n        return `Two of the entries passed to ` +\n            `'workbox-precaching.PrecacheController.addToCacheList()' had the URL ` +\n            `${url} with different integrity values. Please remove one of them.`;\n    },\n    'missing-precache-entry': ({ cacheName, url }) => {\n        return `Unable to find a precached response in ${cacheName} for ${url}.`;\n    },\n    'cross-origin-copy-response': ({ origin }) => {\n        return `workbox-core.copyResponse() can only be used with same-origin ` +\n            `responses. It was passed a response with origin ${origin}.`;\n    },\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { messages } from './messages.js';\nimport '../../_version.js';\nconst fallback = (code, ...args) => {\n    let msg = code;\n    if (args.length > 0) {\n        msg += ` :: ${JSON.stringify(args)}`;\n    }\n    return msg;\n};\nconst generatorFunction = (code, details = {}) => {\n    const message = messages[code];\n    if (!message) {\n        throw new Error(`Unable to find message for code '${code}'.`);\n    }\n    return message(details);\n};\nexport const messageGenerator = (process.env.NODE_ENV === 'production') ?\n    fallback : generatorFunction;\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { messageGenerator } from '../models/messages/messageGenerator.js';\nimport '../_version.js';\n/**\n * Workbox errors should be thrown with this class.\n * This allows use to ensure the type easily in tests,\n * helps developers identify errors from workbox\n * easily and allows use to optimise error\n * messages correctly.\n *\n * @private\n */\nclass WorkboxError extends Error {\n    /**\n     *\n     * @param {string} errorCode The error code that\n     * identifies this particular error.\n     * @param {Object=} details Any relevant arguments\n     * that will help developers identify issues should\n     * be added as a key on the context object.\n     */\n    constructor(errorCode, details) {\n        const message = messageGenerator(errorCode, details);\n        super(message);\n        this.name = errorCode;\n        this.details = details;\n    }\n}\nexport { WorkboxError };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { WorkboxError } from '../_private/WorkboxError.js';\nimport '../_version.js';\n/*\n * This method throws if the supplied value is not an array.\n * The destructed values are required to produce a meaningful error for users.\n * The destructed and restructured object is so it's clear what is\n * needed.\n */\nconst isArray = (value, details) => {\n    if (!Array.isArray(value)) {\n        throw new WorkboxError('not-an-array', details);\n    }\n};\nconst hasMethod = (object, expectedMethod, details) => {\n    const type = typeof object[expectedMethod];\n    if (type !== 'function') {\n        details['expectedMethod'] = expectedMethod;\n        throw new WorkboxError('missing-a-method', details);\n    }\n};\nconst isType = (object, expectedType, details) => {\n    if (typeof object !== expectedType) {\n        details['expectedType'] = expectedType;\n        throw new WorkboxError('incorrect-type', details);\n    }\n};\nconst isInstance = (object, \n// Need the general type to do the check later.\n// eslint-disable-next-line @typescript-eslint/ban-types\nexpectedClass, details) => {\n    if (!(object instanceof expectedClass)) {\n        details['expectedClassName'] = expectedClass.name;\n        throw new WorkboxError('incorrect-class', details);\n    }\n};\nconst isOneOf = (value, validValues, details) => {\n    if (!validValues.includes(value)) {\n        details['validValueDescription'] =\n            `Valid values are ${JSON.stringify(validValues)}.`;\n        throw new WorkboxError('invalid-value', details);\n    }\n};\nconst isArrayOfClass = (value, \n// Need general type to do check later.\nexpectedClass, // eslint-disable-line\ndetails) => {\n    const error = new WorkboxError('not-array-of-class', details);\n    if (!Array.isArray(value)) {\n        throw error;\n    }\n    for (const item of value) {\n        if (!(item instanceof expectedClass)) {\n            throw error;\n        }\n    }\n};\nconst finalAssertExports = process.env.NODE_ENV === 'production' ? null : {\n    hasMethod,\n    isArray,\n    isInstance,\n    isOneOf,\n    isType,\n    isArrayOfClass,\n};\nexport { finalAssertExports as assert };\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:routing:6.2.4'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * The default HTTP method, 'GET', used when there's no specific method\n * configured for a route.\n *\n * @type {string}\n *\n * @private\n */\nexport const defaultMethod = 'GET';\n/**\n * The list of valid HTTP methods associated with requests that could be routed.\n *\n * @type {Array<string>}\n *\n * @private\n */\nexport const validMethods = [\n    'DELETE',\n    'GET',\n    'HEAD',\n    'PATCH',\n    'POST',\n    'PUT',\n];\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport '../_version.js';\n/**\n * @param {function()|Object} handler Either a function, or an object with a\n * 'handle' method.\n * @return {Object} An object with a handle method.\n *\n * @private\n */\nexport const normalizeHandler = (handler) => {\n    if (handler && typeof handler === 'object') {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.hasMethod(handler, 'handle', {\n                moduleName: 'workbox-routing',\n                className: 'Route',\n                funcName: 'constructor',\n                paramName: 'handler',\n            });\n        }\n        return handler;\n    }\n    else {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(handler, 'function', {\n                moduleName: 'workbox-routing',\n                className: 'Route',\n                funcName: 'constructor',\n                paramName: 'handler',\n            });\n        }\n        return { handle: handler };\n    }\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { defaultMethod, validMethods } from './utils/constants.js';\nimport { normalizeHandler } from './utils/normalizeHandler.js';\nimport './_version.js';\n/**\n * A `Route` consists of a pair of callback functions, \"match\" and \"handler\".\n * The \"match\" callback determine if a route should be used to \"handle\" a\n * request by returning a non-falsy value if it can. The \"handler\" callback\n * is called when there is a match and should return a Promise that resolves\n * to a `Response`.\n *\n * @memberof module:workbox-routing\n */\nclass Route {\n    /**\n     * Constructor for Route class.\n     *\n     * @param {module:workbox-routing~matchCallback} match\n     * A callback function that determines whether the route matches a given\n     * `fetch` event by returning a non-falsy value.\n     * @param {module:workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resolving to a Response.\n     * @param {string} [method='GET'] The HTTP method to match the Route\n     * against.\n     */\n    constructor(match, handler, method = defaultMethod) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(match, 'function', {\n                moduleName: 'workbox-routing',\n                className: 'Route',\n                funcName: 'constructor',\n                paramName: 'match',\n            });\n            if (method) {\n                assert.isOneOf(method, validMethods, { paramName: 'method' });\n            }\n        }\n        // These values are referenced directly by Router so cannot be\n        // altered by minificaton.\n        this.handler = normalizeHandler(handler);\n        this.match = match;\n        this.method = method;\n    }\n    /**\n     *\n     * @param {module:workbox-routing-handlerCallback} handler A callback\n     * function that returns a Promise resolving to a Response\n     */\n    setCatchHandler(handler) {\n        this.catchHandler = normalizeHandler(handler);\n    }\n}\nexport { Route };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { Route } from './Route.js';\nimport './_version.js';\n/**\n * RegExpRoute makes it easy to create a regular expression based\n * [Route]{@link module:workbox-routing.Route}.\n *\n * For same-origin requests the RegExp only needs to match part of the URL. For\n * requests against third-party servers, you must define a RegExp that matches\n * the start of the URL.\n *\n * [See the module docs for info.]{@link https://developers.google.com/web/tools/workbox/modules/workbox-routing}\n *\n * @memberof module:workbox-routing\n * @extends module:workbox-routing.Route\n */\nclass RegExpRoute extends Route {\n    /**\n     * If the regular expression contains\n     * [capture groups]{@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp#grouping-back-references},\n     * the captured values will be passed to the\n     * [handler's]{@link module:workbox-routing~handlerCallback} `params`\n     * argument.\n     *\n     * @param {RegExp} regExp The regular expression to match against URLs.\n     * @param {module:workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resulting in a Response.\n     * @param {string} [method='GET'] The HTTP method to match the Route\n     * against.\n     */\n    constructor(regExp, handler, method) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(regExp, RegExp, {\n                moduleName: 'workbox-routing',\n                className: 'RegExpRoute',\n                funcName: 'constructor',\n                paramName: 'pattern',\n            });\n        }\n        const match = ({ url }) => {\n            const result = regExp.exec(url.href);\n            // Return immediately if there's no match.\n            if (!result) {\n                return;\n            }\n            // Require that the match start at the first character in the URL string\n            // if it's a cross-origin request.\n            // See https://github.com/GoogleChrome/workbox/issues/281 for the context\n            // behind this behavior.\n            if ((url.origin !== location.origin) && (result.index !== 0)) {\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.debug(`The regular expression '${regExp.toString()}' only partially matched ` +\n                        `against the cross-origin URL '${url.toString()}'. RegExpRoute's will only ` +\n                        `handle cross-origin requests if they match the entire URL.`);\n                }\n                return;\n            }\n            // If the route matches, but there aren't any capture groups defined, then\n            // this will return [], which is truthy and therefore sufficient to\n            // indicate a match.\n            // If there are capture groups, then it will return their values.\n            return result.slice(1);\n        };\n        super(match, handler, method);\n    }\n}\nexport { RegExpRoute };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst getFriendlyURL = (url) => {\n    const urlObj = new URL(String(url), location.href);\n    // See https://github.com/GoogleChrome/workbox/issues/2323\n    // We want to include everything, except for the origin if it's same-origin.\n    return urlObj.href.replace(new RegExp(`^${location.origin}`), '');\n};\nexport { getFriendlyURL };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { defaultMethod } from './utils/constants.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { normalizeHandler } from './utils/normalizeHandler.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport './_version.js';\n/**\n * The Router can be used to process a FetchEvent through one or more\n * [Routes]{@link module:workbox-routing.Route} responding  with a Request if\n * a matching route exists.\n *\n * If no route matches a given a request, the Router will use a \"default\"\n * handler if one is defined.\n *\n * Should the matching Route throw an error, the Router will use a \"catch\"\n * handler if one is defined to gracefully deal with issues and respond with a\n * Request.\n *\n * If a request matches multiple routes, the **earliest** registered route will\n * be used to respond to the request.\n *\n * @memberof module:workbox-routing\n */\nclass Router {\n    /**\n     * Initializes a new Router.\n     */\n    constructor() {\n        this._routes = new Map();\n        this._defaultHandlerMap = new Map();\n    }\n    /**\n     * @return {Map<string, Array<module:workbox-routing.Route>>} routes A `Map` of HTTP\n     * method name ('GET', etc.) to an array of all the corresponding `Route`\n     * instances that are registered.\n     */\n    get routes() {\n        return this._routes;\n    }\n    /**\n     * Adds a fetch event listener to respond to events when a route matches\n     * the event's request.\n     */\n    addFetchListener() {\n        // See https://github.com/Microsoft/TypeScript/issues/28357#issuecomment-436484705\n        self.addEventListener('fetch', ((event) => {\n            const { request } = event;\n            const responsePromise = this.handleRequest({ request, event });\n            if (responsePromise) {\n                event.respondWith(responsePromise);\n            }\n        }));\n    }\n    /**\n     * Adds a message event listener for URLs to cache from the window.\n     * This is useful to cache resources loaded on the page prior to when the\n     * service worker started controlling it.\n     *\n     * The format of the message data sent from the window should be as follows.\n     * Where the `urlsToCache` array may consist of URL strings or an array of\n     * URL string + `requestInit` object (the same as you'd pass to `fetch()`).\n     *\n     * ```\n     * {\n     *   type: 'CACHE_URLS',\n     *   payload: {\n     *     urlsToCache: [\n     *       './script1.js',\n     *       './script2.js',\n     *       ['./script3.js', {mode: 'no-cors'}],\n     *     ],\n     *   },\n     * }\n     * ```\n     */\n    addCacheListener() {\n        // See https://github.com/Microsoft/TypeScript/issues/28357#issuecomment-436484705\n        self.addEventListener('message', ((event) => {\n            // event.data is type 'any'\n            if (event.data && event.data.type === 'CACHE_URLS') { // eslint-disable-line\n                const { payload } = event.data; // eslint-disable-line\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.debug(`Caching URLs from the window`, payload.urlsToCache);\n                }\n                const requestPromises = Promise.all(payload.urlsToCache.map((entry) => {\n                    if (typeof entry === 'string') {\n                        entry = [entry];\n                    }\n                    const request = new Request(...entry);\n                    return this.handleRequest({ request, event });\n                    // TODO(philipwalton): TypeScript errors without this typecast for\n                    // some reason (probably a bug). The real type here should work but\n                    // doesn't: `Array<Promise<Response> | undefined>`.\n                })); // TypeScript\n                event.waitUntil(requestPromises);\n                // If a MessageChannel was used, reply to the message on success.\n                if (event.ports && event.ports[0]) {\n                    void requestPromises.then(() => event.ports[0].postMessage(true));\n                }\n            }\n        }));\n    }\n    /**\n     * Apply the routing rules to a FetchEvent object to get a Response from an\n     * appropriate Route's handler.\n     *\n     * @param {Object} options\n     * @param {Request} options.request The request to handle.\n     * @param {ExtendableEvent} options.event The event that triggered the\n     *     request.\n     * @return {Promise<Response>|undefined} A promise is returned if a\n     *     registered route can handle the request. If there is no matching\n     *     route and there's no `defaultHandler`, `undefined` is returned.\n     */\n    handleRequest({ request, event }) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'handleRequest',\n                paramName: 'options.request',\n            });\n        }\n        const url = new URL(request.url, location.href);\n        if (!url.protocol.startsWith('http')) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.debug(`Workbox Router only supports URLs that start with 'http'.`);\n            }\n            return;\n        }\n        const sameOrigin = url.origin === location.origin;\n        const { params, route } = this.findMatchingRoute({\n            event,\n            request,\n            sameOrigin,\n            url,\n        });\n        let handler = route && route.handler;\n        const debugMessages = [];\n        if (process.env.NODE_ENV !== 'production') {\n            if (handler) {\n                debugMessages.push([\n                    `Found a route to handle this request:`, route,\n                ]);\n                if (params) {\n                    debugMessages.push([\n                        `Passing the following params to the route's handler:`, params,\n                    ]);\n                }\n            }\n        }\n        // If we don't have a handler because there was no matching route, then\n        // fall back to defaultHandler if that's defined.\n        const method = request.method;\n        if (!handler && this._defaultHandlerMap.has(method)) {\n            if (process.env.NODE_ENV !== 'production') {\n                debugMessages.push(`Failed to find a matching route. Falling ` +\n                    `back to the default handler for ${method}.`);\n            }\n            handler = this._defaultHandlerMap.get(method);\n        }\n        if (!handler) {\n            if (process.env.NODE_ENV !== 'production') {\n                // No handler so Workbox will do nothing. If logs is set of debug\n                // i.e. verbose, we should print out this information.\n                logger.debug(`No route found for: ${getFriendlyURL(url)}`);\n            }\n            return;\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            // We have a handler, meaning Workbox is going to handle the route.\n            // print the routing details to the console.\n            logger.groupCollapsed(`Router is responding to: ${getFriendlyURL(url)}`);\n            debugMessages.forEach((msg) => {\n                if (Array.isArray(msg)) {\n                    logger.log(...msg);\n                }\n                else {\n                    logger.log(msg);\n                }\n            });\n            logger.groupEnd();\n        }\n        // Wrap in try and catch in case the handle method throws a synchronous\n        // error. It should still callback to the catch handler.\n        let responsePromise;\n        try {\n            responsePromise = handler.handle({ url, request, event, params });\n        }\n        catch (err) {\n            responsePromise = Promise.reject(err);\n        }\n        // Get route's catch handler, if it exists\n        const catchHandler = route && route.catchHandler;\n        if (responsePromise instanceof Promise && (this._catchHandler || catchHandler)) {\n            responsePromise = responsePromise.catch(async (err) => {\n                // If there's a route catch handler, process that first\n                if (catchHandler) {\n                    if (process.env.NODE_ENV !== 'production') {\n                        // Still include URL here as it will be async from the console group\n                        // and may not make sense without the URL\n                        logger.groupCollapsed(`Error thrown when responding to: ` +\n                            ` ${getFriendlyURL(url)}. Falling back to route's Catch Handler.`);\n                        logger.error(`Error thrown by:`, route);\n                        logger.error(err);\n                        logger.groupEnd();\n                    }\n                    try {\n                        return await catchHandler.handle({ url, request, event, params });\n                    }\n                    catch (catchErr) {\n                        if (catchErr instanceof Error) {\n                            err = catchErr;\n                        }\n                    }\n                }\n                if (this._catchHandler) {\n                    if (process.env.NODE_ENV !== 'production') {\n                        // Still include URL here as it will be async from the console group\n                        // and may not make sense without the URL\n                        logger.groupCollapsed(`Error thrown when responding to: ` +\n                            ` ${getFriendlyURL(url)}. Falling back to global Catch Handler.`);\n                        logger.error(`Error thrown by:`, route);\n                        logger.error(err);\n                        logger.groupEnd();\n                    }\n                    return this._catchHandler.handle({ url, request, event });\n                }\n                throw err;\n            });\n        }\n        return responsePromise;\n    }\n    /**\n     * Checks a request and URL (and optionally an event) against the list of\n     * registered routes, and if there's a match, returns the corresponding\n     * route along with any params generated by the match.\n     *\n     * @param {Object} options\n     * @param {URL} options.url\n     * @param {boolean} options.sameOrigin The result of comparing `url.origin`\n     *     against the current origin.\n     * @param {Request} options.request The request to match.\n     * @param {Event} options.event The corresponding event.\n     * @return {Object} An object with `route` and `params` properties.\n     *     They are populated if a matching route was found or `undefined`\n     *     otherwise.\n     */\n    findMatchingRoute({ url, sameOrigin, request, event }) {\n        const routes = this._routes.get(request.method) || [];\n        for (const route of routes) {\n            let params;\n            // route.match returns type any, not possible to change right now.\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            const matchResult = route.match({ url, sameOrigin, request, event });\n            if (matchResult) {\n                if (process.env.NODE_ENV !== 'production') {\n                    // Warn developers that using an async matchCallback is almost always\n                    // not the right thing to do.\n                    if (matchResult instanceof Promise) {\n                        logger.warn(`While routing ${getFriendlyURL(url)}, an async ` +\n                            `matchCallback function was used. Please convert the ` +\n                            `following route to use a synchronous matchCallback function:`, route);\n                    }\n                }\n                // See https://github.com/GoogleChrome/workbox/issues/2079\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                params = matchResult;\n                if (Array.isArray(params) && params.length === 0) {\n                    // Instead of passing an empty array in as params, use undefined.\n                    params = undefined;\n                }\n                else if ((matchResult.constructor === Object && // eslint-disable-line\n                    Object.keys(matchResult).length === 0)) {\n                    // Instead of passing an empty object in as params, use undefined.\n                    params = undefined;\n                }\n                else if (typeof matchResult === 'boolean') {\n                    // For the boolean value true (rather than just something truth-y),\n                    // don't set params.\n                    // See https://github.com/GoogleChrome/workbox/pull/2134#issuecomment-513924353\n                    params = undefined;\n                }\n                // Return early if have a match.\n                return { route, params };\n            }\n        }\n        // If no match was found above, return and empty object.\n        return {};\n    }\n    /**\n     * Define a default `handler` that's called when no routes explicitly\n     * match the incoming request.\n     *\n     * Each HTTP method ('GET', 'POST', etc.) gets its own default handler.\n     *\n     * Without a default handler, unmatched requests will go against the\n     * network as if there were no service worker present.\n     *\n     * @param {module:workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resulting in a Response.\n     * @param {string} [method='GET'] The HTTP method to associate with this\n     * default handler. Each method has its own default.\n     */\n    setDefaultHandler(handler, method = defaultMethod) {\n        this._defaultHandlerMap.set(method, normalizeHandler(handler));\n    }\n    /**\n     * If a Route throws an error while handling a request, this `handler`\n     * will be called and given a chance to provide a response.\n     *\n     * @param {module:workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resulting in a Response.\n     */\n    setCatchHandler(handler) {\n        this._catchHandler = normalizeHandler(handler);\n    }\n    /**\n     * Registers a route with the router.\n     *\n     * @param {module:workbox-routing.Route} route The route to register.\n     */\n    registerRoute(route) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(route, 'object', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route',\n            });\n            assert.hasMethod(route, 'match', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route',\n            });\n            assert.isType(route.handler, 'object', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route',\n            });\n            assert.hasMethod(route.handler, 'handle', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route.handler',\n            });\n            assert.isType(route.method, 'string', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route.method',\n            });\n        }\n        if (!this._routes.has(route.method)) {\n            this._routes.set(route.method, []);\n        }\n        // Give precedence to all of the earlier routes by adding this additional\n        // route to the end of the array.\n        this._routes.get(route.method).push(route);\n    }\n    /**\n     * Unregisters a route with the router.\n     *\n     * @param {module:workbox-routing.Route} route The route to unregister.\n     */\n    unregisterRoute(route) {\n        if (!this._routes.has(route.method)) {\n            throw new WorkboxError('unregister-route-but-not-found-with-method', {\n                method: route.method,\n            });\n        }\n        const routeIndex = this._routes.get(route.method).indexOf(route);\n        if (routeIndex > -1) {\n            this._routes.get(route.method).splice(routeIndex, 1);\n        }\n        else {\n            throw new WorkboxError('unregister-route-route-not-registered');\n        }\n    }\n}\nexport { Router };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { Router } from '../Router.js';\nimport '../_version.js';\nlet defaultRouter;\n/**\n * Creates a new, singleton Router instance if one does not exist. If one\n * does already exist, that instance is returned.\n *\n * @private\n * @return {Router}\n */\nexport const getOrCreateDefaultRouter = () => {\n    if (!defaultRouter) {\n        defaultRouter = new Router();\n        // The helpers that use the default Router assume these listeners exist.\n        defaultRouter.addFetchListener();\n        defaultRouter.addCacheListener();\n    }\n    return defaultRouter;\n};\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { Route } from './Route.js';\nimport { RegExpRoute } from './RegExpRoute.js';\nimport { getOrCreateDefaultRouter } from './utils/getOrCreateDefaultRouter.js';\nimport './_version.js';\n/**\n * Easily register a RegExp, string, or function with a caching\n * strategy to a singleton Router instance.\n *\n * This method will generate a Route for you if needed and\n * call [registerRoute()]{@link module:workbox-routing.Router#registerRoute}.\n *\n * @param {RegExp|string|module:workbox-routing.Route~matchCallback|module:workbox-routing.Route} capture\n * If the capture param is a `Route`, all other arguments will be ignored.\n * @param {module:workbox-routing~handlerCallback} [handler] A callback\n * function that returns a Promise resulting in a Response. This parameter\n * is required if `capture` is not a `Route` object.\n * @param {string} [method='GET'] The HTTP method to match the Route\n * against.\n * @return {module:workbox-routing.Route} The generated `Route`(Useful for\n * unregistering).\n *\n * @memberof module:workbox-routing\n */\nfunction registerRoute(capture, handler, method) {\n    let route;\n    if (typeof capture === 'string') {\n        const captureUrl = new URL(capture, location.href);\n        if (process.env.NODE_ENV !== 'production') {\n            if (!(capture.startsWith('/') || capture.startsWith('http'))) {\n                throw new WorkboxError('invalid-string', {\n                    moduleName: 'workbox-routing',\n                    funcName: 'registerRoute',\n                    paramName: 'capture',\n                });\n            }\n            // We want to check if Express-style wildcards are in the pathname only.\n            // TODO: Remove this log message in v4.\n            const valueToCheck = capture.startsWith('http') ?\n                captureUrl.pathname : capture;\n            // See https://github.com/pillarjs/path-to-regexp#parameters\n            const wildcards = '[*:?+]';\n            if ((new RegExp(`${wildcards}`)).exec(valueToCheck)) {\n                logger.debug(`The '$capture' parameter contains an Express-style wildcard ` +\n                    `character (${wildcards}). Strings are now always interpreted as ` +\n                    `exact matches; use a RegExp for partial or wildcard matches.`);\n            }\n        }\n        const matchCallback = ({ url }) => {\n            if (process.env.NODE_ENV !== 'production') {\n                if ((url.pathname === captureUrl.pathname) &&\n                    (url.origin !== captureUrl.origin)) {\n                    logger.debug(`${capture} only partially matches the cross-origin URL ` +\n                        `${url.toString()}. This route will only handle cross-origin requests ` +\n                        `if they match the entire URL.`);\n                }\n            }\n            return url.href === captureUrl.href;\n        };\n        // If `capture` is a string then `handler` and `method` must be present.\n        route = new Route(matchCallback, handler, method);\n    }\n    else if (capture instanceof RegExp) {\n        // If `capture` is a `RegExp` then `handler` and `method` must be present.\n        route = new RegExpRoute(capture, handler, method);\n    }\n    else if (typeof capture === 'function') {\n        // If `capture` is a function then `handler` and `method` must be present.\n        route = new Route(capture, handler, method);\n    }\n    else if (capture instanceof Route) {\n        route = capture;\n    }\n    else {\n        throw new WorkboxError('unsupported-route-type', {\n            moduleName: 'workbox-routing',\n            funcName: 'registerRoute',\n            paramName: 'capture',\n        });\n    }\n    const defaultRouter = getOrCreateDefaultRouter();\n    defaultRouter.registerRoute(route);\n    return route;\n}\nexport { registerRoute };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst _cacheNameDetails = {\n    googleAnalytics: 'googleAnalytics',\n    precache: 'precache-v2',\n    prefix: 'workbox',\n    runtime: 'runtime',\n    suffix: typeof registration !== 'undefined' ? registration.scope : '',\n};\nconst _createCacheName = (cacheName) => {\n    return [_cacheNameDetails.prefix, cacheName, _cacheNameDetails.suffix]\n        .filter((value) => value && value.length > 0)\n        .join('-');\n};\nconst eachCacheNameDetail = (fn) => {\n    for (const key of Object.keys(_cacheNameDetails)) {\n        fn(key);\n    }\n};\nexport const cacheNames = {\n    updateDetails: (details) => {\n        eachCacheNameDetail((key) => {\n            if (typeof details[key] === 'string') {\n                _cacheNameDetails[key] = details[key];\n            }\n        });\n    },\n    getGoogleAnalyticsName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.googleAnalytics);\n    },\n    getPrecacheName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.precache);\n    },\n    getPrefix: () => {\n        return _cacheNameDetails.prefix;\n    },\n    getRuntimeName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.runtime);\n    },\n    getSuffix: () => {\n        return _cacheNameDetails.suffix;\n    },\n};\n","/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * A helper function that prevents a promise from being flagged as unused.\n *\n * @private\n **/\nexport function dontWaitFor(promise) {\n    // Effective no-op.\n    void promise.then(() => { });\n}\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n// Callbacks to be executed whenever there's a quota error.\n// Can't change Function type right now.\n// eslint-disable-next-line @typescript-eslint/ban-types\nconst quotaErrorCallbacks = new Set();\nexport { quotaErrorCallbacks };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from './_private/logger.js';\nimport { assert } from './_private/assert.js';\nimport { quotaErrorCallbacks } from './models/quotaErrorCallbacks.js';\nimport './_version.js';\n/**\n * Adds a function to the set of quotaErrorCallbacks that will be executed if\n * there's a quota error.\n *\n * @param {Function} callback\n * @memberof module:workbox-core\n */\n// Can't change Function type\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction registerQuotaErrorCallback(callback) {\n    if (process.env.NODE_ENV !== 'production') {\n        assert.isType(callback, 'function', {\n            moduleName: 'workbox-core',\n            funcName: 'register',\n            paramName: 'callback',\n        });\n    }\n    quotaErrorCallbacks.add(callback);\n    if (process.env.NODE_ENV !== 'production') {\n        logger.log('Registered a callback to respond to quota errors.', callback);\n    }\n}\nexport { registerQuotaErrorCallback };\n","const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst cursorRequestMap = new WeakMap();\nconst transactionDoneMap = new WeakMap();\nconst transactionStoreNamesMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    promise\n        .then((value) => {\n        // Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval\n        // (see wrapFunction).\n        if (value instanceof IDBCursor) {\n            cursorRequestMap.set(value, request);\n        }\n        // Catching to avoid \"Uncaught Promise exceptions\"\n    })\n        .catch(() => { });\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Polyfill for objectStoreNames because of Edge.\n            if (prop === 'objectStoreNames') {\n                return target.objectStoreNames || transactionStoreNamesMap.get(target);\n            }\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Edge doesn't support objectStoreNames (booo), so we polyfill it here.\n    if (func === IDBDatabase.prototype.transaction &&\n        !('objectStoreNames' in IDBTransaction.prototype)) {\n        return function (storeNames, ...args) {\n            const tx = func.call(unwrap(this), storeNames, ...args);\n            transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [storeNames]);\n            return wrap(tx);\n        };\n    }\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(cursorRequestMap.get(this));\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\nexport { reverseTransformCache as a, instanceOfAny as i, replaceTraps as r, unwrap as u, wrap as w };\n","import { w as wrap, r as replaceTraps } from './wrap-idb-value.js';\nexport { u as unwrap, w as wrap } from './wrap-idb-value.js';\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction));\n        });\n    }\n    if (blocked)\n        request.addEventListener('blocked', () => blocked());\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking)\n            db.addEventListener('versionchange', () => blocking());\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked)\n        request.addEventListener('blocked', () => blocked());\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nexport { deleteDB, openDB };\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:expiration:6.2.4'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { openDB, deleteDB } from 'idb';\nimport '../_version.js';\nconst DB_NAME = 'workbox-expiration';\nconst CACHE_OBJECT_STORE = 'cache-entries';\nconst normalizeURL = (unNormalizedUrl) => {\n    const url = new URL(unNormalizedUrl, location.href);\n    url.hash = '';\n    return url.href;\n};\n/**\n * Returns the timestamp model.\n *\n * @private\n */\nclass CacheTimestampsModel {\n    /**\n     *\n     * @param {string} cacheName\n     *\n     * @private\n     */\n    constructor(cacheName) {\n        this._db = null;\n        this._cacheName = cacheName;\n    }\n    /**\n     * Performs an upgrade of indexedDB.\n     *\n     * @param {IDBPDatabase<CacheDbSchema>} db\n     *\n     * @private\n     */\n    _upgradeDb(db) {\n        // TODO(philipwalton): EdgeHTML doesn't support arrays as a keyPath, so we\n        // have to use the `id` keyPath here and create our own values (a\n        // concatenation of `url + cacheName`) instead of simply using\n        // `keyPath: ['url', 'cacheName']`, which is supported in other browsers.\n        const objStore = db.createObjectStore(CACHE_OBJECT_STORE, { keyPath: 'id' });\n        // TODO(philipwalton): once we don't have to support EdgeHTML, we can\n        // create a single index with the keyPath `['cacheName', 'timestamp']`\n        // instead of doing both these indexes.\n        objStore.createIndex('cacheName', 'cacheName', { unique: false });\n        objStore.createIndex('timestamp', 'timestamp', { unique: false });\n    }\n    /**\n     * Performs an upgrade of indexedDB and deletes deprecated DBs.\n     *\n     * @param {IDBPDatabase<CacheDbSchema>} db\n     *\n     * @private\n     */\n    _upgradeDbAndDeleteOldDbs(db) {\n        this._upgradeDb(db);\n        if (this._cacheName) {\n            void deleteDB(this._cacheName);\n        }\n    }\n    /**\n     * @param {string} url\n     * @param {number} timestamp\n     *\n     * @private\n     */\n    async setTimestamp(url, timestamp) {\n        url = normalizeURL(url);\n        const entry = {\n            url,\n            timestamp,\n            cacheName: this._cacheName,\n            // Creating an ID from the URL and cache name won't be necessary once\n            // Edge switches to Chromium and all browsers we support work with\n            // array keyPaths.\n            id: this._getId(url),\n        };\n        const db = await this.getDb();\n        const tx = db.transaction(CACHE_OBJECT_STORE, 'readwrite', { durability: 'relaxed' });\n        await tx.store.put(entry);\n        await tx.done;\n    }\n    /**\n     * Returns the timestamp stored for a given URL.\n     *\n     * @param {string} url\n     * @return {number | undefined}\n     *\n     * @private\n     */\n    async getTimestamp(url) {\n        const db = await this.getDb();\n        const entry = await db.get(CACHE_OBJECT_STORE, this._getId(url));\n        return entry === null || entry === void 0 ? void 0 : entry.timestamp;\n    }\n    /**\n     * Iterates through all the entries in the object store (from newest to\n     * oldest) and removes entries once either `maxCount` is reached or the\n     * entry's timestamp is less than `minTimestamp`.\n     *\n     * @param {number} minTimestamp\n     * @param {number} maxCount\n     * @return {Array<string>}\n     *\n     * @private\n     */\n    async expireEntries(minTimestamp, maxCount) {\n        const db = await this.getDb();\n        let cursor = await db.transaction(CACHE_OBJECT_STORE).store.index('timestamp').openCursor(null, 'prev');\n        const entriesToDelete = [];\n        let entriesNotDeletedCount = 0;\n        while (cursor) {\n            const result = cursor.value;\n            // TODO(philipwalton): once we can use a multi-key index, we\n            // won't have to check `cacheName` here.\n            if (result.cacheName === this._cacheName) {\n                // Delete an entry if it's older than the max age or\n                // if we already have the max number allowed.\n                if ((minTimestamp && result.timestamp < minTimestamp) ||\n                    (maxCount && entriesNotDeletedCount >= maxCount)) {\n                    // TODO(philipwalton): we should be able to delete the\n                    // entry right here, but doing so causes an iteration\n                    // bug in Safari stable (fixed in TP). Instead we can\n                    // store the keys of the entries to delete, and then\n                    // delete the separate transactions.\n                    // https://github.com/GoogleChrome/workbox/issues/1978\n                    // cursor.delete();\n                    // We only need to return the URL, not the whole entry.\n                    entriesToDelete.push(cursor.value);\n                }\n                else {\n                    entriesNotDeletedCount++;\n                }\n            }\n            cursor = await cursor.continue();\n        }\n        // TODO(philipwalton): once the Safari bug in the following issue is fixed,\n        // we should be able to remove this loop and do the entry deletion in the\n        // cursor loop above:\n        // https://github.com/GoogleChrome/workbox/issues/1978\n        const urlsDeleted = [];\n        for (const entry of entriesToDelete) {\n            await db.delete(CACHE_OBJECT_STORE, entry.id);\n            urlsDeleted.push(entry.url);\n        }\n        return urlsDeleted;\n    }\n    /**\n     * Takes a URL and returns an ID that will be unique in the object store.\n     *\n     * @param {string} url\n     * @return {string}\n     *\n     * @private\n     */\n    _getId(url) {\n        // Creating an ID from the URL and cache name won't be necessary once\n        // Edge switches to Chromium and all browsers we support work with\n        // array keyPaths.\n        return this._cacheName + '|' + normalizeURL(url);\n    }\n    /**\n      * Returns an open connection to the database.\n      *\n      * @private\n      */\n    async getDb() {\n        if (!this._db) {\n            this._db = await openDB(DB_NAME, 1, {\n                upgrade: this._upgradeDbAndDeleteOldDbs.bind(this),\n            });\n        }\n        return this._db;\n    }\n}\nexport { CacheTimestampsModel };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { dontWaitFor } from 'workbox-core/_private/dontWaitFor.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { CacheTimestampsModel } from './models/CacheTimestampsModel.js';\nimport './_version.js';\n/**\n * The `CacheExpiration` class allows you define an expiration and / or\n * limit on the number of responses stored in a\n * [`Cache`](https://developer.mozilla.org/en-US/docs/Web/API/Cache).\n *\n * @memberof module:workbox-expiration\n */\nclass CacheExpiration {\n    /**\n     * To construct a new CacheExpiration instance you must provide at least\n     * one of the `config` properties.\n     *\n     * @param {string} cacheName Name of the cache to apply restrictions to.\n     * @param {Object} config\n     * @param {number} [config.maxEntries] The maximum number of entries to cache.\n     * Entries used the least will be removed as the maximum is reached.\n     * @param {number} [config.maxAgeSeconds] The maximum age of an entry before\n     * it's treated as stale and removed.\n     * @param {Object} [config.matchOptions] The [`CacheQueryOptions`](https://developer.mozilla.org/en-US/docs/Web/API/Cache/delete#Parameters)\n     * that will be used when calling `delete()` on the cache.\n     */\n    constructor(cacheName, config = {}) {\n        this._isRunning = false;\n        this._rerunRequested = false;\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(cacheName, 'string', {\n                moduleName: 'workbox-expiration',\n                className: 'CacheExpiration',\n                funcName: 'constructor',\n                paramName: 'cacheName',\n            });\n            if (!(config.maxEntries || config.maxAgeSeconds)) {\n                throw new WorkboxError('max-entries-or-age-required', {\n                    moduleName: 'workbox-expiration',\n                    className: 'CacheExpiration',\n                    funcName: 'constructor',\n                });\n            }\n            if (config.maxEntries) {\n                assert.isType(config.maxEntries, 'number', {\n                    moduleName: 'workbox-expiration',\n                    className: 'CacheExpiration',\n                    funcName: 'constructor',\n                    paramName: 'config.maxEntries',\n                });\n            }\n            if (config.maxAgeSeconds) {\n                assert.isType(config.maxAgeSeconds, 'number', {\n                    moduleName: 'workbox-expiration',\n                    className: 'CacheExpiration',\n                    funcName: 'constructor',\n                    paramName: 'config.maxAgeSeconds',\n                });\n            }\n        }\n        this._maxEntries = config.maxEntries;\n        this._maxAgeSeconds = config.maxAgeSeconds;\n        this._matchOptions = config.matchOptions;\n        this._cacheName = cacheName;\n        this._timestampModel = new CacheTimestampsModel(cacheName);\n    }\n    /**\n     * Expires entries for the given cache and given criteria.\n     */\n    async expireEntries() {\n        if (this._isRunning) {\n            this._rerunRequested = true;\n            return;\n        }\n        this._isRunning = true;\n        const minTimestamp = this._maxAgeSeconds ?\n            Date.now() - (this._maxAgeSeconds * 1000) : 0;\n        const urlsExpired = await this._timestampModel.expireEntries(minTimestamp, this._maxEntries);\n        // Delete URLs from the cache\n        const cache = await self.caches.open(this._cacheName);\n        for (const url of urlsExpired) {\n            await cache.delete(url, this._matchOptions);\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            if (urlsExpired.length > 0) {\n                logger.groupCollapsed(`Expired ${urlsExpired.length} ` +\n                    `${urlsExpired.length === 1 ? 'entry' : 'entries'} and removed ` +\n                    `${urlsExpired.length === 1 ? 'it' : 'them'} from the ` +\n                    `'${this._cacheName}' cache.`);\n                logger.log(`Expired the following ${urlsExpired.length === 1 ?\n                    'URL' : 'URLs'}:`);\n                urlsExpired.forEach((url) => logger.log(`    ${url}`));\n                logger.groupEnd();\n            }\n            else {\n                logger.debug(`Cache expiration ran and found no entries to remove.`);\n            }\n        }\n        this._isRunning = false;\n        if (this._rerunRequested) {\n            this._rerunRequested = false;\n            dontWaitFor(this.expireEntries());\n        }\n    }\n    /**\n     * Update the timestamp for the given URL. This ensures the when\n     * removing entries based on maximum entries, most recently used\n     * is accurate or when expiring, the timestamp is up-to-date.\n     *\n     * @param {string} url\n     */\n    async updateTimestamp(url) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(url, 'string', {\n                moduleName: 'workbox-expiration',\n                className: 'CacheExpiration',\n                funcName: 'updateTimestamp',\n                paramName: 'url',\n            });\n        }\n        await this._timestampModel.setTimestamp(url, Date.now());\n    }\n    /**\n     * Can be used to check if a URL has expired or not before it's used.\n     *\n     * This requires a look up from IndexedDB, so can be slow.\n     *\n     * Note: This method will not remove the cached entry, call\n     * `expireEntries()` to remove indexedDB and Cache entries.\n     *\n     * @param {string} url\n     * @return {boolean}\n     */\n    async isURLExpired(url) {\n        if (!this._maxAgeSeconds) {\n            if (process.env.NODE_ENV !== 'production') {\n                throw new WorkboxError(`expired-test-without-max-age`, {\n                    methodName: 'isURLExpired',\n                    paramName: 'maxAgeSeconds',\n                });\n            }\n            return false;\n        }\n        else {\n            const timestamp = await this._timestampModel.getTimestamp(url);\n            const expireOlderThan = Date.now() - (this._maxAgeSeconds * 1000);\n            return timestamp !== undefined ? (timestamp < expireOlderThan) : true;\n        }\n    }\n    /**\n     * Removes the IndexedDB object store used to keep track of cache expiration\n     * metadata.\n     */\n    async delete() {\n        // Make sure we don't attempt another rerun if we're called in the middle of\n        // a cache expiration.\n        this._rerunRequested = false;\n        await this._timestampModel.expireEntries(Infinity); // Expires all.\n    }\n}\nexport { CacheExpiration };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { dontWaitFor } from 'workbox-core/_private/dontWaitFor.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { registerQuotaErrorCallback } from 'workbox-core/registerQuotaErrorCallback.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { CacheExpiration } from './CacheExpiration.js';\nimport './_version.js';\n/**\n * This plugin can be used in a `workbox-strategy` to regularly enforce a\n * limit on the age and / or the number of cached requests.\n *\n * It can only be used with `workbox-strategy` instances that have a\n * [custom `cacheName` property set](/web/tools/workbox/guides/configure-workbox#custom_cache_names_in_strategies).\n * In other words, it can't be used to expire entries in strategy that uses the\n * default runtime cache name.\n *\n * Whenever a cached request is used or updated, this plugin will look\n * at the associated cache and remove any old or extra requests.\n *\n * When using `maxAgeSeconds`, requests may be used *once* after expiring\n * because the expiration clean up will not have occurred until *after* the\n * cached request has been used. If the request has a \"Date\" header, then\n * a light weight expiration check is performed and the request will not be\n * used immediately.\n *\n * When using `maxEntries`, the entry least-recently requested will be removed\n * from the cache first.\n *\n * @memberof module:workbox-expiration\n */\nclass ExpirationPlugin {\n    /**\n     * @param {ExpirationPluginOptions} config\n     * @param {number} [config.maxEntries] The maximum number of entries to cache.\n     * Entries used the least will be removed as the maximum is reached.\n     * @param {number} [config.maxAgeSeconds] The maximum age of an entry before\n     * it's treated as stale and removed.\n     * @param {Object} [config.matchOptions] The [`CacheQueryOptions`](https://developer.mozilla.org/en-US/docs/Web/API/Cache/delete#Parameters)\n     * that will be used when calling `delete()` on the cache.\n     * @param {boolean} [config.purgeOnQuotaError] Whether to opt this cache in to\n     * automatic deletion if the available storage quota has been exceeded.\n     */\n    constructor(config = {}) {\n        /**\n         * A \"lifecycle\" callback that will be triggered automatically by the\n         * `workbox-strategies` handlers when a `Response` is about to be returned\n         * from a [Cache](https://developer.mozilla.org/en-US/docs/Web/API/Cache) to\n         * the handler. It allows the `Response` to be inspected for freshness and\n         * prevents it from being used if the `Response`'s `Date` header value is\n         * older than the configured `maxAgeSeconds`.\n         *\n         * @param {Object} options\n         * @param {string} options.cacheName Name of the cache the response is in.\n         * @param {Response} options.cachedResponse The `Response` object that's been\n         *     read from a cache and whose freshness should be checked.\n         * @return {Response} Either the `cachedResponse`, if it's\n         *     fresh, or `null` if the `Response` is older than `maxAgeSeconds`.\n         *\n         * @private\n         */\n        this.cachedResponseWillBeUsed = async ({ event, request, cacheName, cachedResponse }) => {\n            if (!cachedResponse) {\n                return null;\n            }\n            const isFresh = this._isResponseDateFresh(cachedResponse);\n            // Expire entries to ensure that even if the expiration date has\n            // expired, it'll only be used once.\n            const cacheExpiration = this._getCacheExpiration(cacheName);\n            dontWaitFor(cacheExpiration.expireEntries());\n            // Update the metadata for the request URL to the current timestamp,\n            // but don't `await` it as we don't want to block the response.\n            const updateTimestampDone = cacheExpiration.updateTimestamp(request.url);\n            if (event) {\n                try {\n                    event.waitUntil(updateTimestampDone);\n                }\n                catch (error) {\n                    if (process.env.NODE_ENV !== 'production') {\n                        // The event may not be a fetch event; only log the URL if it is.\n                        if ('request' in event) {\n                            logger.warn(`Unable to ensure service worker stays alive when ` +\n                                `updating cache entry for ` +\n                                `'${getFriendlyURL(event.request.url)}'.`);\n                        }\n                    }\n                }\n            }\n            return isFresh ? cachedResponse : null;\n        };\n        /**\n         * A \"lifecycle\" callback that will be triggered automatically by the\n         * `workbox-strategies` handlers when an entry is added to a cache.\n         *\n         * @param {Object} options\n         * @param {string} options.cacheName Name of the cache that was updated.\n         * @param {string} options.request The Request for the cached entry.\n         *\n         * @private\n         */\n        this.cacheDidUpdate = async ({ cacheName, request }) => {\n            if (process.env.NODE_ENV !== 'production') {\n                assert.isType(cacheName, 'string', {\n                    moduleName: 'workbox-expiration',\n                    className: 'Plugin',\n                    funcName: 'cacheDidUpdate',\n                    paramName: 'cacheName',\n                });\n                assert.isInstance(request, Request, {\n                    moduleName: 'workbox-expiration',\n                    className: 'Plugin',\n                    funcName: 'cacheDidUpdate',\n                    paramName: 'request',\n                });\n            }\n            const cacheExpiration = this._getCacheExpiration(cacheName);\n            await cacheExpiration.updateTimestamp(request.url);\n            await cacheExpiration.expireEntries();\n        };\n        if (process.env.NODE_ENV !== 'production') {\n            if (!(config.maxEntries || config.maxAgeSeconds)) {\n                throw new WorkboxError('max-entries-or-age-required', {\n                    moduleName: 'workbox-expiration',\n                    className: 'Plugin',\n                    funcName: 'constructor',\n                });\n            }\n            if (config.maxEntries) {\n                assert.isType(config.maxEntries, 'number', {\n                    moduleName: 'workbox-expiration',\n                    className: 'Plugin',\n                    funcName: 'constructor',\n                    paramName: 'config.maxEntries',\n                });\n            }\n            if (config.maxAgeSeconds) {\n                assert.isType(config.maxAgeSeconds, 'number', {\n                    moduleName: 'workbox-expiration',\n                    className: 'Plugin',\n                    funcName: 'constructor',\n                    paramName: 'config.maxAgeSeconds',\n                });\n            }\n        }\n        this._config = config;\n        this._maxAgeSeconds = config.maxAgeSeconds;\n        this._cacheExpirations = new Map();\n        if (config.purgeOnQuotaError) {\n            registerQuotaErrorCallback(() => this.deleteCacheAndMetadata());\n        }\n    }\n    /**\n     * A simple helper method to return a CacheExpiration instance for a given\n     * cache name.\n     *\n     * @param {string} cacheName\n     * @return {CacheExpiration}\n     *\n     * @private\n     */\n    _getCacheExpiration(cacheName) {\n        if (cacheName === cacheNames.getRuntimeName()) {\n            throw new WorkboxError('expire-custom-caches-only');\n        }\n        let cacheExpiration = this._cacheExpirations.get(cacheName);\n        if (!cacheExpiration) {\n            cacheExpiration = new CacheExpiration(cacheName, this._config);\n            this._cacheExpirations.set(cacheName, cacheExpiration);\n        }\n        return cacheExpiration;\n    }\n    /**\n     * @param {Response} cachedResponse\n     * @return {boolean}\n     *\n     * @private\n     */\n    _isResponseDateFresh(cachedResponse) {\n        if (!this._maxAgeSeconds) {\n            // We aren't expiring by age, so return true, it's fresh\n            return true;\n        }\n        // Check if the 'date' header will suffice a quick expiration check.\n        // See https://github.com/GoogleChromeLabs/sw-toolbox/issues/164 for\n        // discussion.\n        const dateHeaderTimestamp = this._getDateHeaderTimestamp(cachedResponse);\n        if (dateHeaderTimestamp === null) {\n            // Unable to parse date, so assume it's fresh.\n            return true;\n        }\n        // If we have a valid headerTime, then our response is fresh iff the\n        // headerTime plus maxAgeSeconds is greater than the current time.\n        const now = Date.now();\n        return dateHeaderTimestamp >= now - (this._maxAgeSeconds * 1000);\n    }\n    /**\n     * This method will extract the data header and parse it into a useful\n     * value.\n     *\n     * @param {Response} cachedResponse\n     * @return {number|null}\n     *\n     * @private\n     */\n    _getDateHeaderTimestamp(cachedResponse) {\n        if (!cachedResponse.headers.has('date')) {\n            return null;\n        }\n        const dateHeader = cachedResponse.headers.get('date');\n        const parsedDate = new Date(dateHeader);\n        const headerTime = parsedDate.getTime();\n        // If the Date header was invalid for some reason, parsedDate.getTime()\n        // will return NaN.\n        if (isNaN(headerTime)) {\n            return null;\n        }\n        return headerTime;\n    }\n    /**\n     * This is a helper method that performs two operations:\n     *\n     * - Deletes *all* the underlying Cache instances associated with this plugin\n     * instance, by calling caches.delete() on your behalf.\n     * - Deletes the metadata from IndexedDB used to keep track of expiration\n     * details for each Cache instance.\n     *\n     * When using cache expiration, calling this method is preferable to calling\n     * `caches.delete()` directly, since this will ensure that the IndexedDB\n     * metadata is also cleanly removed and open IndexedDB instances are deleted.\n     *\n     * Note that if you're *not* using cache expiration for a given cache, calling\n     * `caches.delete()` and passing in the cache's name should be sufficient.\n     * There is no Workbox-specific method needed for cleanup in that case.\n     */\n    async deleteCacheAndMetadata() {\n        // Do this one at a time instead of all at once via `Promise.all()` to\n        // reduce the chance of inconsistency if a promise rejects.\n        for (const [cacheName, cacheExpiration] of this._cacheExpirations) {\n            await self.caches.delete(cacheName);\n            await cacheExpiration.delete();\n        }\n        // Reset this._cacheExpirations to its initial state.\n        this._cacheExpirations = new Map();\n    }\n}\nexport { ExpirationPlugin };\n","/*\n  Copyright 2020 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nfunction stripParams(fullURL, ignoreParams) {\n    const strippedURL = new URL(fullURL);\n    for (const param of ignoreParams) {\n        strippedURL.searchParams.delete(param);\n    }\n    return strippedURL.href;\n}\n/**\n * Matches an item in the cache, ignoring specific URL params. This is similar\n * to the `ignoreSearch` option, but it allows you to ignore just specific\n * params (while continuing to match on the others).\n *\n * @private\n * @param {Cache} cache\n * @param {Request} request\n * @param {Object} matchOptions\n * @param {Array<string>} ignoreParams\n * @return {Promise<Response|undefined>}\n */\nasync function cacheMatchIgnoreParams(cache, request, ignoreParams, matchOptions) {\n    const strippedRequestURL = stripParams(request.url, ignoreParams);\n    // If the request doesn't include any ignored params, match as normal.\n    if (request.url === strippedRequestURL) {\n        return cache.match(request, matchOptions);\n    }\n    // Otherwise, match by comparing keys\n    const keysOptions = Object.assign(Object.assign({}, matchOptions), { ignoreSearch: true });\n    const cacheKeys = await cache.keys(request, keysOptions);\n    for (const cacheKey of cacheKeys) {\n        const strippedCacheKeyURL = stripParams(cacheKey.url, ignoreParams);\n        if (strippedRequestURL === strippedCacheKeyURL) {\n            return cache.match(cacheKey, matchOptions);\n        }\n    }\n    return;\n}\nexport { cacheMatchIgnoreParams };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * The Deferred class composes Promises in a way that allows for them to be\n * resolved or rejected from outside the constructor. In most cases promises\n * should be used directly, but Deferreds can be necessary when the logic to\n * resolve a promise must be separate.\n *\n * @private\n */\nclass Deferred {\n    /**\n     * Creates a promise and exposes its resolve and reject functions as methods.\n     */\n    constructor() {\n        this.promise = new Promise((resolve, reject) => {\n            this.resolve = resolve;\n            this.reject = reject;\n        });\n    }\n}\nexport { Deferred };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from '../_private/logger.js';\nimport { quotaErrorCallbacks } from '../models/quotaErrorCallbacks.js';\nimport '../_version.js';\n/**\n * Runs all of the callback functions, one at a time sequentially, in the order\n * in which they were registered.\n *\n * @memberof module:workbox-core\n * @private\n */\nasync function executeQuotaErrorCallbacks() {\n    if (process.env.NODE_ENV !== 'production') {\n        logger.log(`About to run ${quotaErrorCallbacks.size} ` +\n            `callbacks to clean up caches.`);\n    }\n    for (const callback of quotaErrorCallbacks) {\n        await callback();\n        if (process.env.NODE_ENV !== 'production') {\n            logger.log(callback, 'is complete.');\n        }\n    }\n    if (process.env.NODE_ENV !== 'production') {\n        logger.log('Finished running callbacks.');\n    }\n}\nexport { executeQuotaErrorCallbacks };\n","/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * Returns a promise that resolves and the passed number of milliseconds.\n * This utility is an async/await-friendly version of `setTimeout`.\n *\n * @param {number} ms\n * @return {Promise}\n * @private\n */\nexport function timeout(ms) {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n}\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:strategies:6.2.4'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { cacheMatchIgnoreParams } from 'workbox-core/_private/cacheMatchIgnoreParams.js';\nimport { Deferred } from 'workbox-core/_private/Deferred.js';\nimport { executeQuotaErrorCallbacks } from 'workbox-core/_private/executeQuotaErrorCallbacks.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { timeout } from 'workbox-core/_private/timeout.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport './_version.js';\nfunction toRequest(input) {\n    return (typeof input === 'string') ? new Request(input) : input;\n}\n/**\n * A class created every time a Strategy instance instance calls\n * [handle()]{@link module:workbox-strategies.Strategy~handle} or\n * [handleAll()]{@link module:workbox-strategies.Strategy~handleAll} that wraps all fetch and\n * cache actions around plugin callbacks and keeps track of when the strategy\n * is \"done\" (i.e. all added `event.waitUntil()` promises have resolved).\n *\n * @memberof module:workbox-strategies\n */\nclass StrategyHandler {\n    /**\n     * Creates a new instance associated with the passed strategy and event\n     * that's handling the request.\n     *\n     * The constructor also initializes the state that will be passed to each of\n     * the plugins handling this request.\n     *\n     * @param {module:workbox-strategies.Strategy} strategy\n     * @param {Object} options\n     * @param {Request|string} options.request A request to run this strategy for.\n     * @param {ExtendableEvent} options.event The event associated with the\n     *     request.\n     * @param {URL} [options.url]\n     * @param {*} [options.params]\n     *     [match callback]{@link module:workbox-routing~matchCallback},\n     *     (if applicable).\n     */\n    constructor(strategy, options) {\n        this._cacheKeys = {};\n        /**\n         * The request the strategy is performing (passed to the strategy's\n         * `handle()` or `handleAll()` method).\n         * @name request\n         * @instance\n         * @type {Request}\n         * @memberof module:workbox-strategies.StrategyHandler\n         */\n        /**\n         * The event associated with this request.\n         * @name event\n         * @instance\n         * @type {ExtendableEvent}\n         * @memberof module:workbox-strategies.StrategyHandler\n         */\n        /**\n         * A `URL` instance of `request.url` (if passed to the strategy's\n         * `handle()` or `handleAll()` method).\n         * Note: the `url` param will be present if the strategy was invoked\n         * from a workbox `Route` object.\n         * @name url\n         * @instance\n         * @type {URL|undefined}\n         * @memberof module:workbox-strategies.StrategyHandler\n         */\n        /**\n         * A `param` value (if passed to the strategy's\n         * `handle()` or `handleAll()` method).\n         * Note: the `param` param will be present if the strategy was invoked\n         * from a workbox `Route` object and the\n         * [match callback]{@link module:workbox-routing~matchCallback} returned\n         * a truthy value (it will be that value).\n         * @name params\n         * @instance\n         * @type {*|undefined}\n         * @memberof module:workbox-strategies.StrategyHandler\n         */\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(options.event, ExtendableEvent, {\n                moduleName: 'workbox-strategies',\n                className: 'StrategyHandler',\n                funcName: 'constructor',\n                paramName: 'options.event',\n            });\n        }\n        Object.assign(this, options);\n        this.event = options.event;\n        this._strategy = strategy;\n        this._handlerDeferred = new Deferred();\n        this._extendLifetimePromises = [];\n        // Copy the plugins list (since it's mutable on the strategy),\n        // so any mutations don't affect this handler instance.\n        this._plugins = [...strategy.plugins];\n        this._pluginStateMap = new Map();\n        for (const plugin of this._plugins) {\n            this._pluginStateMap.set(plugin, {});\n        }\n        this.event.waitUntil(this._handlerDeferred.promise);\n    }\n    /**\n     * Fetches a given request (and invokes any applicable plugin callback\n     * methods) using the `fetchOptions` (for non-navigation requests) and\n     * `plugins` defined on the `Strategy` object.\n     *\n     * The following plugin lifecycle methods are invoked when using this method:\n     * - `requestWillFetch()`\n     * - `fetchDidSucceed()`\n     * - `fetchDidFail()`\n     *\n     * @param {Request|string} input The URL or request to fetch.\n     * @return {Promise<Response>}\n     */\n    async fetch(input) {\n        const { event } = this;\n        let request = toRequest(input);\n        if (request.mode === 'navigate' &&\n            event instanceof FetchEvent &&\n            event.preloadResponse) {\n            const possiblePreloadResponse = await event.preloadResponse;\n            if (possiblePreloadResponse) {\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.log(`Using a preloaded navigation response for ` +\n                        `'${getFriendlyURL(request.url)}'`);\n                }\n                return possiblePreloadResponse;\n            }\n        }\n        // If there is a fetchDidFail plugin, we need to save a clone of the\n        // original request before it's either modified by a requestWillFetch\n        // plugin or before the original request's body is consumed via fetch().\n        const originalRequest = this.hasCallback('fetchDidFail') ?\n            request.clone() : null;\n        try {\n            for (const cb of this.iterateCallbacks('requestWillFetch')) {\n                request = await cb({ request: request.clone(), event });\n            }\n        }\n        catch (err) {\n            if (err instanceof Error) {\n                throw new WorkboxError('plugin-error-request-will-fetch', { thrownErrorMessage: err.message });\n            }\n        }\n        // The request can be altered by plugins with `requestWillFetch` making\n        // the original request (most likely from a `fetch` event) different\n        // from the Request we make. Pass both to `fetchDidFail` to aid debugging.\n        const pluginFilteredRequest = request.clone();\n        try {\n            let fetchResponse;\n            // See https://github.com/GoogleChrome/workbox/issues/1796\n            fetchResponse = await fetch(request, request.mode === 'navigate' ?\n                undefined : this._strategy.fetchOptions);\n            if (process.env.NODE_ENV !== 'production') {\n                logger.debug(`Network request for ` +\n                    `'${getFriendlyURL(request.url)}' returned a response with ` +\n                    `status '${fetchResponse.status}'.`);\n            }\n            for (const callback of this.iterateCallbacks('fetchDidSucceed')) {\n                fetchResponse = await callback({\n                    event,\n                    request: pluginFilteredRequest,\n                    response: fetchResponse,\n                });\n            }\n            return fetchResponse;\n        }\n        catch (error) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.log(`Network request for ` +\n                    `'${getFriendlyURL(request.url)}' threw an error.`, error);\n            }\n            // `originalRequest` will only exist if a `fetchDidFail` callback\n            // is being used (see above).\n            if (originalRequest) {\n                await this.runCallbacks('fetchDidFail', {\n                    error: error,\n                    event,\n                    originalRequest: originalRequest.clone(),\n                    request: pluginFilteredRequest.clone(),\n                });\n            }\n            throw error;\n        }\n    }\n    /**\n     * Calls `this.fetch()` and (in the background) runs `this.cachePut()` on\n     * the response generated by `this.fetch()`.\n     *\n     * The call to `this.cachePut()` automatically invokes `this.waitUntil()`,\n     * so you do not have to manually call `waitUntil()` on the event.\n     *\n     * @param {Request|string} input The request or URL to fetch and cache.\n     * @return {Promise<Response>}\n     */\n    async fetchAndCachePut(input) {\n        const response = await this.fetch(input);\n        const responseClone = response.clone();\n        void this.waitUntil(this.cachePut(input, responseClone));\n        return response;\n    }\n    /**\n     * Matches a request from the cache (and invokes any applicable plugin\n     * callback methods) using the `cacheName`, `matchOptions`, and `plugins`\n     * defined on the strategy object.\n     *\n     * The following plugin lifecycle methods are invoked when using this method:\n     * - cacheKeyWillByUsed()\n     * - cachedResponseWillByUsed()\n     *\n     * @param {Request|string} key The Request or URL to use as the cache key.\n     * @return {Promise<Response|undefined>} A matching response, if found.\n     */\n    async cacheMatch(key) {\n        const request = toRequest(key);\n        let cachedResponse;\n        const { cacheName, matchOptions } = this._strategy;\n        const effectiveRequest = await this.getCacheKey(request, 'read');\n        const multiMatchOptions = Object.assign(Object.assign({}, matchOptions), { cacheName });\n        cachedResponse = await caches.match(effectiveRequest, multiMatchOptions);\n        if (process.env.NODE_ENV !== 'production') {\n            if (cachedResponse) {\n                logger.debug(`Found a cached response in '${cacheName}'.`);\n            }\n            else {\n                logger.debug(`No cached response found in '${cacheName}'.`);\n            }\n        }\n        for (const callback of this.iterateCallbacks('cachedResponseWillBeUsed')) {\n            cachedResponse = (await callback({\n                cacheName,\n                matchOptions,\n                cachedResponse,\n                request: effectiveRequest,\n                event: this.event,\n            })) || undefined;\n        }\n        return cachedResponse;\n    }\n    /**\n     * Puts a request/response pair in the cache (and invokes any applicable\n     * plugin callback methods) using the `cacheName` and `plugins` defined on\n     * the strategy object.\n     *\n     * The following plugin lifecycle methods are invoked when using this method:\n     * - cacheKeyWillByUsed()\n     * - cacheWillUpdate()\n     * - cacheDidUpdate()\n     *\n     * @param {Request|string} key The request or URL to use as the cache key.\n     * @param {Response} response The response to cache.\n     * @return {Promise<boolean>} `false` if a cacheWillUpdate caused the response\n     * not be cached, and `true` otherwise.\n     */\n    async cachePut(key, response) {\n        const request = toRequest(key);\n        // Run in the next task to avoid blocking other cache reads.\n        // https://github.com/w3c/ServiceWorker/issues/1397\n        await timeout(0);\n        const effectiveRequest = await this.getCacheKey(request, 'write');\n        if (process.env.NODE_ENV !== 'production') {\n            if (effectiveRequest.method && effectiveRequest.method !== 'GET') {\n                throw new WorkboxError('attempt-to-cache-non-get-request', {\n                    url: getFriendlyURL(effectiveRequest.url),\n                    method: effectiveRequest.method,\n                });\n            }\n            // See https://github.com/GoogleChrome/workbox/issues/2818\n            const vary = response.headers.get('Vary');\n            if (vary) {\n                logger.debug(`The response for ${getFriendlyURL(effectiveRequest.url)} ` +\n                    `has a 'Vary: ${vary}' header. ` +\n                    `Consider setting the {ignoreVary: true} option on your strategy ` +\n                    `to ensure cache matching and deletion works as expected.`);\n            }\n        }\n        if (!response) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.error(`Cannot cache non-existent response for ` +\n                    `'${getFriendlyURL(effectiveRequest.url)}'.`);\n            }\n            throw new WorkboxError('cache-put-with-no-response', {\n                url: getFriendlyURL(effectiveRequest.url),\n            });\n        }\n        const responseToCache = await this._ensureResponseSafeToCache(response);\n        if (!responseToCache) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.debug(`Response '${getFriendlyURL(effectiveRequest.url)}' ` +\n                    `will not be cached.`, responseToCache);\n            }\n            return false;\n        }\n        const { cacheName, matchOptions } = this._strategy;\n        const cache = await self.caches.open(cacheName);\n        const hasCacheUpdateCallback = this.hasCallback('cacheDidUpdate');\n        const oldResponse = hasCacheUpdateCallback ? await cacheMatchIgnoreParams(\n        // TODO(philipwalton): the `__WB_REVISION__` param is a precaching\n        // feature. Consider into ways to only add this behavior if using\n        // precaching.\n        cache, effectiveRequest.clone(), ['__WB_REVISION__'], matchOptions) :\n            null;\n        if (process.env.NODE_ENV !== 'production') {\n            logger.debug(`Updating the '${cacheName}' cache with a new Response ` +\n                `for ${getFriendlyURL(effectiveRequest.url)}.`);\n        }\n        try {\n            await cache.put(effectiveRequest, hasCacheUpdateCallback ?\n                responseToCache.clone() : responseToCache);\n        }\n        catch (error) {\n            if (error instanceof Error) {\n                // See https://developer.mozilla.org/en-US/docs/Web/API/DOMException#exception-QuotaExceededError\n                if (error.name === 'QuotaExceededError') {\n                    await executeQuotaErrorCallbacks();\n                }\n                throw error;\n            }\n        }\n        for (const callback of this.iterateCallbacks('cacheDidUpdate')) {\n            await callback({\n                cacheName,\n                oldResponse,\n                newResponse: responseToCache.clone(),\n                request: effectiveRequest,\n                event: this.event,\n            });\n        }\n        return true;\n    }\n    /**\n     * Checks the list of plugins for the `cacheKeyWillBeUsed` callback, and\n     * executes any of those callbacks found in sequence. The final `Request`\n     * object returned by the last plugin is treated as the cache key for cache\n     * reads and/or writes. If no `cacheKeyWillBeUsed` plugin callbacks have\n     * been registered, the passed request is returned unmodified\n     *\n     * @param {Request} request\n     * @param {string} mode\n     * @return {Promise<Request>}\n     */\n    async getCacheKey(request, mode) {\n        if (!this._cacheKeys[mode]) {\n            let effectiveRequest = request;\n            for (const callback of this.iterateCallbacks('cacheKeyWillBeUsed')) {\n                effectiveRequest = toRequest(await callback({\n                    mode,\n                    request: effectiveRequest,\n                    event: this.event,\n                    // params has a type any can't change right now.\n                    params: this.params,\n                }));\n            }\n            this._cacheKeys[mode] = effectiveRequest;\n        }\n        return this._cacheKeys[mode];\n    }\n    /**\n     * Returns true if the strategy has at least one plugin with the given\n     * callback.\n     *\n     * @param {string} name The name of the callback to check for.\n     * @return {boolean}\n     */\n    hasCallback(name) {\n        for (const plugin of this._strategy.plugins) {\n            if (name in plugin) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Runs all plugin callbacks matching the given name, in order, passing the\n     * given param object (merged ith the current plugin state) as the only\n     * argument.\n     *\n     * Note: since this method runs all plugins, it's not suitable for cases\n     * where the return value of a callback needs to be applied prior to calling\n     * the next callback. See\n     * [`iterateCallbacks()`]{@link module:workbox-strategies.StrategyHandler#iterateCallbacks}\n     * below for how to handle that case.\n     *\n     * @param {string} name The name of the callback to run within each plugin.\n     * @param {Object} param The object to pass as the first (and only) param\n     *     when executing each callback. This object will be merged with the\n     *     current plugin state prior to callback execution.\n     */\n    async runCallbacks(name, param) {\n        for (const callback of this.iterateCallbacks(name)) {\n            // TODO(philipwalton): not sure why `any` is needed. It seems like\n            // this should work with `as WorkboxPluginCallbackParam[C]`.\n            await callback(param);\n        }\n    }\n    /**\n     * Accepts a callback and returns an iterable of matching plugin callbacks,\n     * where each callback is wrapped with the current handler state (i.e. when\n     * you call each callback, whatever object parameter you pass it will\n     * be merged with the plugin's current state).\n     *\n     * @param {string} name The name fo the callback to run\n     * @return {Array<Function>}\n     */\n    *iterateCallbacks(name) {\n        for (const plugin of this._strategy.plugins) {\n            if (typeof plugin[name] === 'function') {\n                const state = this._pluginStateMap.get(plugin);\n                const statefulCallback = (param) => {\n                    const statefulParam = Object.assign(Object.assign({}, param), { state });\n                    // TODO(philipwalton): not sure why `any` is needed. It seems like\n                    // this should work with `as WorkboxPluginCallbackParam[C]`.\n                    return plugin[name](statefulParam);\n                };\n                yield statefulCallback;\n            }\n        }\n    }\n    /**\n     * Adds a promise to the\n     * [extend lifetime promises]{@link https://w3c.github.io/ServiceWorker/#extendableevent-extend-lifetime-promises}\n     * of the event event associated with the request being handled (usually a\n     * `FetchEvent`).\n     *\n     * Note: you can await\n     * [`doneWaiting()`]{@link module:workbox-strategies.StrategyHandler~doneWaiting}\n     * to know when all added promises have settled.\n     *\n     * @param {Promise} promise A promise to add to the extend lifetime promises\n     *     of the event that triggered the request.\n     */\n    waitUntil(promise) {\n        this._extendLifetimePromises.push(promise);\n        return promise;\n    }\n    /**\n     * Returns a promise that resolves once all promises passed to\n     * [`waitUntil()`]{@link module:workbox-strategies.StrategyHandler~waitUntil}\n     * have settled.\n     *\n     * Note: any work done after `doneWaiting()` settles should be manually\n     * passed to an event's `waitUntil()` method (not this handler's\n     * `waitUntil()` method), otherwise the service worker thread my be killed\n     * prior to your work completing.\n     */\n    async doneWaiting() {\n        let promise;\n        while (promise = this._extendLifetimePromises.shift()) {\n            await promise;\n        }\n    }\n    /**\n     * Stops running the strategy and immediately resolves any pending\n     * `waitUntil()` promises.\n     */\n    destroy() {\n        this._handlerDeferred.resolve(null);\n    }\n    /**\n     * This method will call cacheWillUpdate on the available plugins (or use\n     * status === 200) to determine if the Response is safe and valid to cache.\n     *\n     * @param {Request} options.request\n     * @param {Response} options.response\n     * @return {Promise<Response|undefined>}\n     *\n     * @private\n     */\n    async _ensureResponseSafeToCache(response) {\n        let responseToCache = response;\n        let pluginsUsed = false;\n        for (const callback of this.iterateCallbacks('cacheWillUpdate')) {\n            responseToCache = (await callback({\n                request: this.request,\n                response: responseToCache,\n                event: this.event,\n            })) || undefined;\n            pluginsUsed = true;\n            if (!responseToCache) {\n                break;\n            }\n        }\n        if (!pluginsUsed) {\n            if (responseToCache && responseToCache.status !== 200) {\n                responseToCache = undefined;\n            }\n            if (process.env.NODE_ENV !== 'production') {\n                if (responseToCache) {\n                    if (responseToCache.status !== 200) {\n                        if (responseToCache.status === 0) {\n                            logger.warn(`The response for '${this.request.url}' ` +\n                                `is an opaque response. The caching strategy that you're ` +\n                                `using will not cache opaque responses by default.`);\n                        }\n                        else {\n                            logger.debug(`The response for '${this.request.url}' ` +\n                                `returned a status code of '${response.status}' and won't ` +\n                                `be cached as a result.`);\n                        }\n                    }\n                }\n            }\n        }\n        return responseToCache;\n    }\n}\nexport { StrategyHandler };\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { StrategyHandler } from './StrategyHandler.js';\nimport './_version.js';\n/**\n * An abstract base class that all other strategy classes must extend from:\n *\n * @memberof module:workbox-strategies\n */\nclass Strategy {\n    /**\n     * Creates a new instance of the strategy and sets all documented option\n     * properties as public instance properties.\n     *\n     * Note: if a custom strategy class extends the base Strategy class and does\n     * not need more than these properties, it does not need to define its own\n     * constructor.\n     *\n     * @param {Object} [options]\n     * @param {string} [options.cacheName] Cache name to store and retrieve\n     * requests. Defaults to the cache names provided by\n     * [workbox-core]{@link module:workbox-core.cacheNames}.\n     * @param {Array<Object>} [options.plugins] [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n     * to use in conjunction with this caching strategy.\n     * @param {Object} [options.fetchOptions] Values passed along to the\n     * [`init`](https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters)\n     * of [non-navigation](https://github.com/GoogleChrome/workbox/issues/1796)\n     * `fetch()` requests made by this strategy.\n     * @param {Object} [options.matchOptions] The\n     * [`CacheQueryOptions`]{@link https://w3c.github.io/ServiceWorker/#dictdef-cachequeryoptions}\n     * for any `cache.match()` or `cache.put()` calls made by this strategy.\n     */\n    constructor(options = {}) {\n        /**\n         * Cache name to store and retrieve\n         * requests. Defaults to the cache names provided by\n         * [workbox-core]{@link module:workbox-core.cacheNames}.\n         *\n         * @type {string}\n         */\n        this.cacheName = cacheNames.getRuntimeName(options.cacheName);\n        /**\n         * The list\n         * [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n         * used by this strategy.\n         *\n         * @type {Array<Object>}\n         */\n        this.plugins = options.plugins || [];\n        /**\n         * Values passed along to the\n         * [`init`]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters}\n         * of all fetch() requests made by this strategy.\n         *\n         * @type {Object}\n         */\n        this.fetchOptions = options.fetchOptions;\n        /**\n         * The\n         * [`CacheQueryOptions`]{@link https://w3c.github.io/ServiceWorker/#dictdef-cachequeryoptions}\n         * for any `cache.match()` or `cache.put()` calls made by this strategy.\n         *\n         * @type {Object}\n         */\n        this.matchOptions = options.matchOptions;\n    }\n    /**\n     * Perform a request strategy and returns a `Promise` that will resolve with\n     * a `Response`, invoking all relevant plugin callbacks.\n     *\n     * When a strategy instance is registered with a Workbox\n     * [route]{@link module:workbox-routing.Route}, this method is automatically\n     * called when the route matches.\n     *\n     * Alternatively, this method can be used in a standalone `FetchEvent`\n     * listener by passing it to `event.respondWith()`.\n     *\n     * @param {FetchEvent|Object} options A `FetchEvent` or an object with the\n     *     properties listed below.\n     * @param {Request|string} options.request A request to run this strategy for.\n     * @param {ExtendableEvent} options.event The event associated with the\n     *     request.\n     * @param {URL} [options.url]\n     * @param {*} [options.params]\n     */\n    handle(options) {\n        const [responseDone] = this.handleAll(options);\n        return responseDone;\n    }\n    /**\n     * Similar to [`handle()`]{@link module:workbox-strategies.Strategy~handle}, but\n     * instead of just returning a `Promise` that resolves to a `Response` it\n     * it will return an tuple of [response, done] promises, where the former\n     * (`response`) is equivalent to what `handle()` returns, and the latter is a\n     * Promise that will resolve once any promises that were added to\n     * `event.waitUntil()` as part of performing the strategy have completed.\n     *\n     * You can await the `done` promise to ensure any extra work performed by\n     * the strategy (usually caching responses) completes successfully.\n     *\n     * @param {FetchEvent|Object} options A `FetchEvent` or an object with the\n     *     properties listed below.\n     * @param {Request|string} options.request A request to run this strategy for.\n     * @param {ExtendableEvent} options.event The event associated with the\n     *     request.\n     * @param {URL} [options.url]\n     * @param {*} [options.params]\n     * @return {Array<Promise>} A tuple of [response, done]\n     *     promises that can be used to determine when the response resolves as\n     *     well as when the handler has completed all its work.\n     */\n    handleAll(options) {\n        // Allow for flexible options to be passed.\n        if (options instanceof FetchEvent) {\n            options = {\n                event: options,\n                request: options.request,\n            };\n        }\n        const event = options.event;\n        const request = typeof options.request === 'string' ?\n            new Request(options.request) :\n            options.request;\n        const params = 'params' in options ? options.params : undefined;\n        const handler = new StrategyHandler(this, { event, request, params });\n        const responseDone = this._getResponse(handler, request, event);\n        const handlerDone = this._awaitComplete(responseDone, handler, request, event);\n        // Return an array of promises, suitable for use with Promise.all().\n        return [responseDone, handlerDone];\n    }\n    async _getResponse(handler, request, event) {\n        await handler.runCallbacks('handlerWillStart', { event, request });\n        let response = undefined;\n        try {\n            response = await this._handle(request, handler);\n            // The \"official\" Strategy subclasses all throw this error automatically,\n            // but in case a third-party Strategy doesn't, ensure that we have a\n            // consistent failure when there's no response or an error response.\n            if (!response || response.type === 'error') {\n                throw new WorkboxError('no-response', { url: request.url });\n            }\n        }\n        catch (error) {\n            if (error instanceof Error) {\n                for (const callback of handler.iterateCallbacks('handlerDidError')) {\n                    response = await callback({ error, event, request });\n                    if (response) {\n                        break;\n                    }\n                }\n            }\n            if (!response) {\n                throw error;\n            }\n            else if (process.env.NODE_ENV !== 'production') {\n                logger.log(`While responding to '${getFriendlyURL(request.url)}', ` +\n                    `an ${error instanceof Error ? error.toString() : ''} error occurred. Using a fallback response provided by ` +\n                    `a handlerDidError plugin.`);\n            }\n        }\n        for (const callback of handler.iterateCallbacks('handlerWillRespond')) {\n            response = await callback({ event, request, response });\n        }\n        return response;\n    }\n    async _awaitComplete(responseDone, handler, request, event) {\n        let response;\n        let error;\n        try {\n            response = await responseDone;\n        }\n        catch (error) {\n            // Ignore errors, as response errors should be caught via the `response`\n            // promise above. The `done` promise will only throw for errors in\n            // promises passed to `handler.waitUntil()`.\n        }\n        try {\n            await handler.runCallbacks('handlerDidRespond', {\n                event,\n                request,\n                response,\n            });\n            await handler.doneWaiting();\n        }\n        catch (waitUntilError) {\n            if (waitUntilError instanceof Error) {\n                error = waitUntilError;\n            }\n        }\n        await handler.runCallbacks('handlerDidComplete', {\n            event,\n            request,\n            response,\n            error: error,\n        });\n        handler.destroy();\n        if (error) {\n            throw error;\n        }\n    }\n}\nexport { Strategy };\n/**\n * Classes extending the `Strategy` based class should implement this method,\n * and leverage the [`handler`]{@link module:workbox-strategies.StrategyHandler}\n * arg to perform all fetching and cache logic, which will ensure all relevant\n * cache, cache options, fetch options and plugins are used (per the current\n * strategy instance).\n *\n * @name _handle\n * @instance\n * @abstract\n * @function\n * @param {Request} request\n * @param {module:workbox-strategies.StrategyHandler} handler\n * @return {Promise<Response>}\n *\n * @memberof module:workbox-strategies.Strategy\n */\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport '../_version.js';\nexport const messages = {\n    strategyStart: (strategyName, request) => `Using ${strategyName} to respond to '${getFriendlyURL(request.url)}'`,\n    printFinalResponse: (response) => {\n        if (response) {\n            logger.groupCollapsed(`View the final response here.`);\n            logger.log(response || '[No response returned]');\n            logger.groupEnd();\n        }\n    },\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { Strategy } from './Strategy.js';\nimport { messages } from './utils/messages.js';\nimport './_version.js';\n/**\n * An implementation of a [cache-first]{@link https://developers.google.com/web/fundamentals/instant-and-offline/offline-cookbook/#cache-falling-back-to-network}\n * request strategy.\n *\n * A cache first strategy is useful for assets that have been revisioned,\n * such as URLs like `/styles/example.a8f5f1.css`, since they\n * can be cached for long periods of time.\n *\n * If the network request fails, and there is no cache match, this will throw\n * a `WorkboxError` exception.\n *\n * @extends module:workbox-strategies.Strategy\n * @memberof module:workbox-strategies\n */\nclass CacheFirst extends Strategy {\n    /**\n     * @private\n     * @param {Request|string} request A request to run this strategy for.\n     * @param {module:workbox-strategies.StrategyHandler} handler The event that\n     *     triggered the request.\n     * @return {Promise<Response>}\n     */\n    async _handle(request, handler) {\n        const logs = [];\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-strategies',\n                className: this.constructor.name,\n                funcName: 'makeRequest',\n                paramName: 'request',\n            });\n        }\n        let response = await handler.cacheMatch(request);\n        let error = undefined;\n        if (!response) {\n            if (process.env.NODE_ENV !== 'production') {\n                logs.push(`No response found in the '${this.cacheName}' cache. ` +\n                    `Will respond with a network request.`);\n            }\n            try {\n                response = await handler.fetchAndCachePut(request);\n            }\n            catch (err) {\n                if (err instanceof Error) {\n                    error = err;\n                }\n            }\n            if (process.env.NODE_ENV !== 'production') {\n                if (response) {\n                    logs.push(`Got response from network.`);\n                }\n                else {\n                    logs.push(`Unable to get a response from the network.`);\n                }\n            }\n        }\n        else {\n            if (process.env.NODE_ENV !== 'production') {\n                logs.push(`Found a cached response in the '${this.cacheName}' cache.`);\n            }\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            logger.groupCollapsed(messages.strategyStart(this.constructor.name, request));\n            for (const log of logs) {\n                logger.log(log);\n            }\n            messages.printFinalResponse(response);\n            logger.groupEnd();\n        }\n        if (!response) {\n            throw new WorkboxError('no-response', { url: request.url, error });\n        }\n        return response;\n    }\n}\nexport { CacheFirst };\n"],"names":["self","_","e","logger","__WB_DISABLE_DEV_LOGS","inGroup","methodToColorMap","debug","log","warn","error","groupCollapsed","groupEnd","print","method","args","test","navigator","userAgent","console","styles","logPrefix","join","api","loggerMethods","Object","keys","key","messages","paramName","validValueDescription","value","Error","JSON","stringify","moduleName","className","funcName","expectedType","classNameStr","expectedClassName","isReturnValueProblem","expectedMethod","entry","firstEntry","secondEntry","thrownErrorMessage","cacheNameId","name","methodName","expectedClass","normalizedRangeHeader","size","start","end","url","message","status","cacheName","origin","generatorFunction","code","details","messageGenerator","WorkboxError","constructor","errorCode","isArray","Array","hasMethod","object","type","isType","isInstance","isOneOf","validValues","includes","isArrayOfClass","item","finalAssertExports","defaultMethod","validMethods","normalizeHandler","handler","assert","handle","Route","match","setCatchHandler","catchHandler","RegExpRoute","regExp","RegExp","result","exec","href","location","index","toString","slice","getFriendlyURL","urlObj","URL","String","replace","Router","_routes","Map","_defaultHandlerMap","routes","addFetchListener","addEventListener","event","request","responsePromise","handleRequest","respondWith","addCacheListener","data","payload","urlsToCache","requestPromises","Promise","all","map","Request","waitUntil","ports","then","postMessage","protocol","startsWith","sameOrigin","params","route","findMatchingRoute","debugMessages","push","has","get","forEach","msg","err","reject","_catchHandler","catch","catchErr","matchResult","length","undefined","setDefaultHandler","set","registerRoute","unregisterRoute","routeIndex","indexOf","splice","defaultRouter","getOrCreateDefaultRouter","capture","captureUrl","valueToCheck","pathname","wildcards","matchCallback","_cacheNameDetails","googleAnalytics","precache","prefix","runtime","suffix","registration","scope","_createCacheName","filter","eachCacheNameDetail","fn","cacheNames","updateDetails","getGoogleAnalyticsName","userCacheName","getPrecacheName","getPrefix","getRuntimeName","getSuffix","dontWaitFor","promise","quotaErrorCallbacks","Set","registerQuotaErrorCallback","callback","add","instanceOfAny","constructors","some","c","idbProxyableTypes","cursorAdvanceMethods","getIdbProxyableTypes","IDBDatabase","IDBObjectStore","IDBIndex","IDBCursor","IDBTransaction","getCursorAdvanceMethods","prototype","advance","continue","continuePrimaryKey","cursorRequestMap","WeakMap","transactionDoneMap","transactionStoreNamesMap","transformCache","reverseTransformCache","promisifyRequest","resolve","unlisten","removeEventListener","success","wrap","cacheDonePromiseForTransaction","tx","done","complete","DOMException","idbProxyTraps","target","prop","receiver","objectStoreNames","objectStore","replaceTraps","wrapFunction","func","transaction","storeNames","call","unwrap","sort","apply","transformCachableValue","Proxy","IDBRequest","newValue","openDB","version","blocked","upgrade","blocking","terminated","indexedDB","open","openPromise","oldVersion","newVersion","db","deleteDB","deleteDatabase","readMethods","writeMethods","cachedMethods","getMethod","targetFuncName","useIndex","isWrite","storeName","store","shift","oldTraps","DB_NAME","CACHE_OBJECT_STORE","normalizeURL","unNormalizedUrl","hash","CacheTimestampsModel","_db","_cacheName","_upgradeDb","objStore","createObjectStore","keyPath","createIndex","unique","_upgradeDbAndDeleteOldDbs","setTimestamp","timestamp","id","_getId","getDb","durability","put","getTimestamp","expireEntries","minTimestamp","maxCount","cursor","openCursor","entriesToDelete","entriesNotDeletedCount","urlsDeleted","delete","bind","CacheExpiration","config","_isRunning","_rerunRequested","maxEntries","maxAgeSeconds","_maxEntries","_maxAgeSeconds","_matchOptions","matchOptions","_timestampModel","Date","now","urlsExpired","cache","caches","updateTimestamp","isURLExpired","expireOlderThan","Infinity","ExpirationPlugin","cachedResponseWillBeUsed","cachedResponse","isFresh","_isResponseDateFresh","cacheExpiration","_getCacheExpiration","updateTimestampDone","cacheDidUpdate","_config","_cacheExpirations","purgeOnQuotaError","deleteCacheAndMetadata","dateHeaderTimestamp","_getDateHeaderTimestamp","headers","dateHeader","parsedDate","headerTime","getTime","isNaN","stripParams","fullURL","ignoreParams","strippedURL","param","searchParams","cacheMatchIgnoreParams","strippedRequestURL","keysOptions","assign","ignoreSearch","cacheKeys","cacheKey","strippedCacheKeyURL","Deferred","executeQuotaErrorCallbacks","timeout","ms","setTimeout","toRequest","input","StrategyHandler","strategy","options","_cacheKeys","ExtendableEvent","_strategy","_handlerDeferred","_extendLifetimePromises","_plugins","plugins","_pluginStateMap","plugin","fetch","mode","FetchEvent","preloadResponse","possiblePreloadResponse","originalRequest","hasCallback","clone","cb","iterateCallbacks","pluginFilteredRequest","fetchResponse","fetchOptions","response","runCallbacks","fetchAndCachePut","responseClone","cachePut","cacheMatch","effectiveRequest","getCacheKey","multiMatchOptions","vary","responseToCache","_ensureResponseSafeToCache","hasCacheUpdateCallback","oldResponse","newResponse","state","statefulCallback","statefulParam","doneWaiting","destroy","pluginsUsed","Strategy","responseDone","handleAll","_getResponse","handlerDone","_awaitComplete","_handle","waitUntilError","strategyStart","strategyName","printFinalResponse","CacheFirst","logs"],"mappings":"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;IC5BtB;IACA;AACA;IACA;IACA;IACA;IACA;IAOA;IACA;IACA;IACA;IACA;;IACA,MAAMW,QAAN,CAAe;IACX;IACJ;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACI1V,EAAAA,WAAW,CAAC8S,OAAO,GAAG,EAAX,EAAe;IACtB;IACR;IACA;IACA;IACA;IACA;IACA;IACQ,SAAKrT,SAAL,GAAiBuH,UAAU,CAACM,cAAX,CAA0BwL,OAAO,CAACrT,SAAlC,CAAjB;IACA;IACR;IACA;IACA;IACA;IACA;IACA;;IACQ,SAAK4T,OAAL,GAAeP,OAAO,CAACO,OAAR,IAAmB,EAAlC;IACA;IACR;IACA;IACA;IACA;IACA;IACA;;IACQ,SAAKe,YAAL,GAAoBtB,OAAO,CAACsB,YAA5B;IACA;IACR;IACA;IACA;IACA;IACA;IACA;;IACQ,SAAK7E,YAAL,GAAoBuD,OAAO,CAACvD,YAA5B;IACH;IACD;IACJ;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;;IACInO,EAAAA,MAAM,CAAC0R,OAAD,EAAU;IACZ,UAAM,CAAC6C,YAAD,IAAiB,KAAKC,SAAL,CAAe9C,OAAf,CAAvB;IACA,WAAO6C,YAAP;IACH;IACD;IACJ;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;;IACIC,EAAAA,SAAS,CAAC9C,OAAD,EAAU;IACf;IACA,QAAIA,OAAO,YAAYY,UAAvB,EAAmC;IAC/BZ,MAAAA,OAAO,GAAG;IACN/P,QAAAA,KAAK,EAAE+P,OADD;IAEN9P,QAAAA,OAAO,EAAE8P,OAAO,CAAC9P;IAFX,OAAV;IAIH;;IACD,UAAMD,KAAK,GAAG+P,OAAO,CAAC/P,KAAtB;IACA,UAAMC,OAAO,GAAG,OAAO8P,OAAO,CAAC9P,OAAf,KAA2B,QAA3B,GA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"}